Pat files...
* Always have one number or string per line
* Lines end with a CRLF
* Last line is always a 0 (+ CRLF)
* always start with "6 - - - - ", where a space in these notes is shorthand for a CRLF in the patfile.
	Actually only "always" with our current tracing protocol. These are the whole-image values for the 4 predefined observations, may be '-', 'Y', 'N', or a user-entered string. Note that nothing in the pat file seems to show the NAMES you're using for these at observation time; but line 2 is the first predefined value, line 3 the second, etc. Names _are_ written to the data file, though.
* When empty, consist of "6 - - - - 0"
* Known possible values for one line:
	non-negative integers
	decimals with six digits after the dot (may be negative)
	"R<integer" (Very likely that this means "root number <integer>")
	"*"
	"-"
	"\"
* When R<integer> appears, the line above it is always "7".
* Lines below an R seem to go:
R<n>
<8 lines integers>, in the form
	<plausible starting X for a root segment>
	<plausible starting y>
	<plausible ending x>
	<plausible ending y>
	<same four repeated in same order>
	When plotting these values onto images, they appear to define the root midline; not sure why they're repeated.
<8 lines decimal> 
	All digits right of decimal place are zero.
	Values seem to *usually*, not always, be nearly identical to integer XY values above, with lines in the same order, but sometimes off by one, e.g. integer line is 669 and decimal line is 668.000000. Sometimes differs by more.
	When plotting these onto images, these appear to define the root edges. "nearly identical" to root midline only because so many roots are tiny. 
<4 lines integers>:
	<1 or 0>
	<1 or 0>
	<integer>, usually seems to be in the 2-3 digit (tens to low hundreds) range
	<0, 1, 2, or 3>
<4 lines decimal>, places right of decimal *are* significant
	first two lines may be positive or negative, most ~log-distributed around -100-100, occasional overflows to 1000.00
	second two lines none <0, ~log-distributed 0 to ~20000, occasional overflows to 1e6
<5 lines integer>:
	<0 or 1>
		Probably a boolean "root ends in a valid tip" flag, appears to be set for all segments not just final one.
	<integer between 0 and 13>, this is probably the root number -- matches the <n> of most recent "R<n>".
	<three lines "0">
<2 lines decimal>
	these look like they're probably PxSizeH pixel dimensions -- in this directory the first line is either "0.024064" or "0.024161", same as 5-27 and 5-28 PxSizeH values, and second line is either "0.025157" or "0.025424", ditto PxSizeV. (follow-up question: Does WinRhizo change these when you load them under a different calibration?)
<integer "1">
	...or 0, at least in EF2012_T054_L015_2012.05.23_121224_JNR.pat
<2 lines decimal, tenths place 0 or 0.5>
	Most commonly 0.500000 for both lines, but not always, and both lines not always the same.
	In the 2010-05-28 directory, the possible values are:
	0.500000
	2.000000
	3.500000
	4.000000
	4.500000
	6.000000
	8.000000
	8.500000
	12.000000
	12.500000
	15.500000
	16.000000
	16.500000
	20.000000
	24.000000
	24.500000
	28.000000
	32.000000
	Maaaaybe these are diameter classes, but in the data file WinRhizo saved by 0.05-mm classes... would expect "35" rather than "32"... unless these are midpoints rounded off, e.g avg(3,3.5)=3.25? but there are still 18 possible values and WinRhizo only writes 10 diameter classes in my currently configured output.
<1 line decimal>
	Values mostly 0.5-2, min 0.14 max 11.07.
<3 lines integer>:
	<nearly always "300", occasionally "301" or "302">
		Probably root living/dead/gone status.
	<"1">
		Or apparently sometimes other -- "3" in EF2012_T001_L015_2012.06.22_141328_003_LYF.pat
	<nearly always "0", a very few "1">
		Changing a segment from "living" to "gone" flips this 0->1. "Dead" flag, maybe? Need to check if 1's here are always 301 or 302 2 lines up.
<5 lines character>: 
	<nearly always "*" except one case where it is "\">
		This is the "note" field for a given root. TODO: Does this appear in every segment, or just the first one?
	<4 lines nearly always "-" except a very few "*">
		These are the predefined observations 1-4 for this segment. May be "-", "Y", "N", or an arbitrary string.
<1 line "1">
	(... or apparently "0" at least some but not all the times segment has an invalid root tip?) 
<1 line "7" if another R follows, "0" if not>

This makes 46 lines for each root segment.
	Not true: at least in EF2012_T054_L015_2012.05.23_121224_JNR.pat, 5 segments have more than 46 lines, with line 46 = "0" and then a variable number of lines integers, probably in same pattern (unknown so far) as those found at end-of-file in 2010 (see next paragraph). The lines seem to go in sets of three: 1 n 0, with long runs of n counting down until interrupted, e.g. EF2012_T054_L015_2012.05.23_121224_JNR.pat lines 1328-1378 are "1 28 0 1 27 0 [...] 1 18 0 1 17 1 5 0 [...] 1 2 0 28 1 7 R2".

After the last root segment, each non-empty contains a variable number of additional lines, all with integers, usually single-digit or low teens. Doesn't seem to be closely related to number of segments in file -- T038 L025 has 32 segments from 11 roots, but only three lines ("1 1 0") beyond the end of the last root, while others with only a segment or two have >20 lines at the end.

Second-to-last line of the file is always "1", last line is "0".

