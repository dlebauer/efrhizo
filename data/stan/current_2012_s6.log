Starting current_2012_s6 on  Sun Jul 31 23:27:00 UTC 2016
Running mctd_foursurf.R for year  2012  session  6
Loading required package: ggplot2
Loading required package: StanHeaders
rstan (Version 2.11.1, packaged: 2016-07-28 18:19:31 UTC, GitRev: 85f7a56811da)
For execution on a local, multicore CPU with excess RAM we recommend calling
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
R version 3.3.1 (2016-06-21)
Platform: x86_64-apple-darwin13.4.0 (64-bit)
Running under: OS X 10.11.6 (El Capitan)

locale:
[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8

attached base packages:
[1] stats     graphics  grDevices utils     datasets  base     

other attached packages:
[1] rstan_2.11.1       StanHeaders_2.11.0 ggplot2_2.1.0     

loaded via a namespace (and not attached):
 [1] colorspace_1.2-6 scales_0.4.0     plyr_1.8.4       inline_0.3.14   
 [5] gtable_0.2.0     gridExtra_2.2.1  Rcpp_0.12.6      grid_3.3.1      
 [9] methods_3.3.1    stats4_3.3.1     munsell_0.4.3   
structure(list(Tube = c(25L, 26L, 28L, 29L, 30L, 31L, 32L, 33L, 
34L, 35L, 36L, 37L, 38L, 39L, 40L, 41L, 42L, 43L, 44L, 45L, 46L, 
47L, 48L, 49L, 50L, 51L, 52L, 53L, 54L, 55L, 56L, 57L, 58L, 59L, 
60L, 61L, 63L, 64L, 65L, 66L, 67L, 68L, 69L, 70L, 71L, 72L, 73L, 
74L, 75L, 76L, 77L, 78L, 79L, 80L, 81L, 82L, 83L, 84L, 85L, 86L, 
88L, 89L, 90L, 91L, 92L, 93L, 94L, 95L, 96L), Tube_alias = 1:69), .Names = c("Tube", 
"Tube_alias"), row.names = c(NA, -69L), class = "data.frame")
   Tube Tube_alias
1    25          1
2    26          2
3    28          3
4    29          4
5    30          5
6    31          6
7    32          7
8    33          8
9    34          9
10   35         10
11   36         11
12   37         12
13   38         13
14   39         14
15   40         15
16   41         16
17   42         17
18   43         18
19   44         19
20   45         20
21   46         21
22   47         22
23   48         23
24   49         24
25   50         25
26   51         26
27   52         27
28   53         28
29   54         29
30   55         30
31   56         31
32   57         32
33   58         33
34   59         34
35   60         35
36   61         36
37   63         37
38   64         38
39   65         39
40   66         40
41   67         41
42   68         42
43   69         43
44   70         44
45   71         45
46   72         46
47   73         47
48   74         48
49   75         49
50   76         50
51   77         51
52   78         52
53   79         53
54   80         54
55   81         55
56   82         56
57   83         57
58   84         58
59   85         59
60   86         60
61   88         61
62   89         62
63   90         63
64   91         64
65   92         65
66   93         66
67   94         67
68   95         68
69   96         69
[1] "Using data from 2012 , session 6"
[1] "Crop name-to-number key:"
            num        name first_tube last_tube first_tube_alias
Switchgrass   1 Switchgrass         49        72               24
Miscanthus    2  Miscanthus         25        48                1
Prairie       3     Prairie         73        96               47
            last_tube_alias n_tubes
Switchgrass              46      23
Miscanthus               23      23
Prairie                  69      23
[1] "conditions for predicted data:"
   tube depth     Species
1     1     1  Miscanthus
2     2     1     Prairie
3     3     1 Switchgrass
4     4     1  Miscanthus
5     1     8  Miscanthus
6     2     8     Prairie
7     3     8 Switchgrass
8     4     8  Miscanthus
9     1    15  Miscanthus
10    2    15     Prairie
11    3    15 Switchgrass
12    4    15  Miscanthus
13    1    21  Miscanthus
14    2    21     Prairie
15    3    21 Switchgrass
16    4    21  Miscanthus
17    1    28  Miscanthus
18    2    28     Prairie
19    3    28 Switchgrass
20    4    28  Miscanthus
21    1    35  Miscanthus
22    2    35     Prairie
23    3    35 Switchgrass
24    4    35  Miscanthus
25    1    42  Miscanthus
26    2    42     Prairie
27    3    42 Switchgrass
28    4    42  Miscanthus
29    1    49  Miscanthus
30    2    49     Prairie
31    3    49 Switchgrass
32    4    49  Miscanthus
33    1    55  Miscanthus
34    2    55     Prairie
35    3    55 Switchgrass
36    4    55  Miscanthus
37    1    62  Miscanthus
38    2    62     Prairie
39    3    62 Switchgrass
40    4    62  Miscanthus
41    1    69  Miscanthus
42    2    69     Prairie
43    3    69 Switchgrass
44    4    69  Miscanthus
45    1    76  Miscanthus
46    2    76     Prairie
47    3    76 Switchgrass
48    4    76  Miscanthus
49    1    82  Miscanthus
50    2    82     Prairie
51    3    82 Switchgrass
52    4    82  Miscanthus
53    1    89  Miscanthus
54    2    89     Prairie
55    3    89 Switchgrass
56    4    89  Miscanthus
57    1    96  Miscanthus
58    2    96     Prairie
59    3    96 Switchgrass
60    4    96  Miscanthus
61    1   103  Miscanthus
62    2   103     Prairie
63    3   103 Switchgrass
64    4   103  Miscanthus
65    1   110  Miscanthus
66    2   110     Prairie
67    3   110 Switchgrass
68    4   110  Miscanthus
69    1   116  Miscanthus
70    2   116     Prairie
71    3   116 Switchgrass
72    4   116  Miscanthus
73    1   123  Miscanthus
74    2   123     Prairie
75    3   123 Switchgrass
76    4   123  Miscanthus
77    1   130  Miscanthus
78    2   130     Prairie
79    3   130 Switchgrass
80    4   130  Miscanthus

TRANSLATING MODEL 'mctd_foursurf' FROM Stan CODE TO C++ CODE NOW.
successful in parsing the Stan model 'mctd_foursurf'.

CHECKING DATA AND PREPROCESSING FOR MODEL 'mctd_foursurf' NOW.

COMPILING MODEL 'mctd_foursurf' NOW.

STARTING SAMPLER FOR MODEL 'mctd_foursurf' NOW.
starting worker pid=30051 on localhost:11424 at 18:27:05.363
starting worker pid=30059 on localhost:11424 at 18:27:05.560
starting worker pid=30067 on localhost:11424 at 18:27:05.758
starting worker pid=30075 on localhost:11424 at 18:27:05.955
starting worker pid=30083 on localhost:11424 at 18:27:06.158

CHECKING DATA AND PREPROCESSING FOR MODEL 'mctd_foursurf' NOW.

COMPILING MODEL 'mctd_foursurf' NOW.

STARTING SAMPLER FOR MODEL 'mctd_foursurf' NOW.

SAMPLING FOR MODEL 'mctd_foursurf' NOW (CHAIN 1).

Chain 1, Iteration:    1 / 5000 [  0%]  (Warmup)
CHECKING DATA AND PREPROCESSING FOR MODEL 'mctd_foursurf' NOW.

COMPILING MODEL 'mctd_foursurf' NOW.

STARTING SAMPLER FOR MODEL 'mctd_foursurf' NOW.

SAMPLING FOR MODEL 'mctd_foursurf' NOW (CHAIN 2).

Chain 2, Iteration:    1 / 5000 [  0%]  (Warmup)
CHECKING DATA AND PREPROCESSING FOR MODEL 'mctd_foursurf' NOW.

COMPILING MODEL 'mctd_foursurf' NOW.

STARTING SAMPLER FOR MODEL 'mctd_foursurf' NOW.

SAMPLING FOR MODEL 'mctd_foursurf' NOW (CHAIN 3).

Chain 3, Iteration:    1 / 5000 [  0%]  (Warmup)
CHECKING DATA AND PREPROCESSING FOR MODEL 'mctd_foursurf' NOW.

COMPILING MODEL 'mctd_foursurf' NOW.

STARTING SAMPLER FOR MODEL 'mctd_foursurf' NOW.

SAMPLING FOR MODEL 'mctd_foursurf' NOW (CHAIN 4).

Chain 4, Iteration:    1 / 5000 [  0%]  (Warmup)
CHECKING DATA AND PREPROCESSING FOR MODEL 'mctd_foursurf' NOW.

COMPILING MODEL 'mctd_foursurf' NOW.

STARTING SAMPLER FOR MODEL 'mctd_foursurf' NOW.

SAMPLING FOR MODEL 'mctd_foursurf' NOW (CHAIN 5).

Chain 5, Iteration:    1 / 5000 [  0%]  (Warmup)
Chain 1, Iteration:  500 / 5000 [ 10%]  (Warmup)
Chain 3, Iteration:  500 / 5000 [ 10%]  (Warmup)
Chain 4, Iteration:  500 / 5000 [ 10%]  (Warmup)
Chain 2, Iteration:  500 / 5000 [ 10%]  (Warmup)
Chain 5, Iteration:  500 / 5000 [ 10%]  (Warmup)
Chain 1, Iteration: 1000 / 5000 [ 20%]  (Warmup)
Chain 1, Iteration: 1001 / 5000 [ 20%]  (Sampling)
Chain 3, Iteration: 1000 / 5000 [ 20%]  (Warmup)
Chain 3, Iteration: 1001 / 5000 [ 20%]  (Sampling)
Chain 4, Iteration: 1000 / 5000 [ 20%]  (Warmup)
Chain 4, Iteration: 1001 / 5000 [ 20%]  (Sampling)
Chain 2, Iteration: 1000 / 5000 [ 20%]  (Warmup)
Chain 2, Iteration: 1001 / 5000 [ 20%]  (Sampling)
Chain 1, Iteration: 1500 / 5000 [ 30%]  (Sampling)
Chain 3, Iteration: 1500 / 5000 [ 30%]  (Sampling)
Chain 2, Iteration: 1500 / 5000 [ 30%]  (Sampling)
Chain 4, Iteration: 1500 / 5000 [ 30%]  (Sampling)
Chain 5, Iteration: 1000 / 5000 [ 20%]  (Warmup)
Chain 5, Iteration: 1001 / 5000 [ 20%]  (Sampling)
Chain 1, Iteration: 2000 / 5000 [ 40%]  (Sampling)
Chain 3, Iteration: 2000 / 5000 [ 40%]  (Sampling)
Chain 2, Iteration: 2000 / 5000 [ 40%]  (Sampling)
Chain 4, Iteration: 2000 / 5000 [ 40%]  (Sampling)
Chain 1, Iteration: 2500 / 5000 [ 50%]  (Sampling)
Chain 3, Iteration: 2500 / 5000 [ 50%]  (Sampling)
Chain 2, Iteration: 2500 / 5000 [ 50%]  (Sampling)
Chain 4, Iteration: 2500 / 5000 [ 50%]  (Sampling)
Chain 1, Iteration: 3000 / 5000 [ 60%]  (Sampling)
Chain 3, Iteration: 3000 / 5000 [ 60%]  (Sampling)
Chain 2, Iteration: 3000 / 5000 [ 60%]  (Sampling)
Chain 4, Iteration: 3000 / 5000 [ 60%]  (Sampling)
Chain 1, Iteration: 3500 / 5000 [ 70%]  (Sampling)
Chain 3, Iteration: 3500 / 5000 [ 70%]  (Sampling)
Chain 2, Iteration: 3500 / 5000 [ 70%]  (Sampling)
Chain 4, Iteration: 3500 / 5000 [ 70%]  (Sampling)
Chain 5, Iteration: 1500 / 5000 [ 30%]  (Sampling)
Chain 1, Iteration: 4000 / 5000 [ 80%]  (Sampling)
Chain 3, Iteration: 4000 / 5000 [ 80%]  (Sampling)
Chain 2, Iteration: 4000 / 5000 [ 80%]  (Sampling)
Chain 4, Iteration: 4000 / 5000 [ 80%]  (Sampling)
Chain 1, Iteration: 4500 / 5000 [ 90%]  (Sampling)
Chain 3, Iteration: 4500 / 5000 [ 90%]  (Sampling)
Chain 2, Iteration: 4500 / 5000 [ 90%]  (Sampling)
Chain 4, Iteration: 4500 / 5000 [ 90%]  (Sampling)
Chain 1, Iteration: 5000 / 5000 [100%]  (Sampling)
 Elapsed Time: 42.524 seconds (Warm-up)
               149.728 seconds (Sampling)
               192.252 seconds (Total)

The following numerical problems occured the indicated number of times after warmup on chain 1
                                                                                            count
Exception thrown at line 124: lognormal_log: Scale parameter[1] is inf, but must be finite!     7
Exception thrown at line 114: normal_log: Scale parameter is 0, but must be > 0!                1
When a numerical problem occurs, the Hamiltonian proposal gets rejected.
If the number in the 'count' column is small, do not ask about this message on stan-users.

Chain 3, Iteration: 5000 / 5000 [100%]  (Sampling)
 Elapsed Time: 43.0084 seconds (Warm-up)
               148.629 seconds (Sampling)
               191.637 seconds (Total)

The following numerical problems occured the indicated number of times after warmup on chain 3
                                                                                            count
Exception thrown at line 124: lognormal_log: Scale parameter[1] is inf, but must be finite!     8
Exception thrown at line 114: normal_log: Scale parameter is 0, but must be > 0!                1
When a numerical problem occurs, the Hamiltonian proposal gets rejected.
If the number in the 'count' column is small, do not ask about this message on stan-users.

Chain 2, Iteration: 5000 / 5000 [100%]  (Sampling)
 Elapsed Time: 45.169 seconds (Warm-up)
               147.483 seconds (Sampling)
               192.652 seconds (Total)

The following numerical problems occured the indicated number of times after warmup on chain 2
                                                                                            count
Exception thrown at line 124: lognormal_log: Scale parameter[1] is inf, but must be finite!     7
Exception thrown at line 114: normal_log: Scale parameter is 0, but must be > 0!                1
When a numerical problem occurs, the Hamiltonian proposal gets rejected.
If the number in the 'count' column is small, do not ask about this message on stan-users.

Chain 4, Iteration: 5000 / 5000 [100%]  (Sampling)
 Elapsed Time: 43.2953 seconds (Warm-up)
               153.467 seconds (Sampling)
               196.762 seconds (Total)

The following numerical problems occured the indicated number of times after warmup on chain 4
                                                                                            count
Exception thrown at line 124: lognormal_log: Scale parameter[1] is inf, but must be finite!     8
Exception thrown at line 114: normal_log: Scale parameter is 0, but must be > 0!                1
When a numerical problem occurs, the Hamiltonian proposal gets rejected.
If the number in the 'count' column is small, do not ask about this message on stan-users.

Chain 5, Iteration: 2000 / 5000 [ 40%]  (Sampling)
Chain 5, Iteration: 2500 / 5000 [ 50%]  (Sampling)
Chain 5, Iteration: 3000 / 5000 [ 60%]  (Sampling)
Chain 5, Iteration: 3500 / 5000 [ 70%]  (Sampling)
Chain 5, Iteration: 4000 / 5000 [ 80%]  (Sampling)
Chain 5, Iteration: 4500 / 5000 [ 90%]  (Sampling)
Chain 5, Iteration: 5000 / 5000 [100%]  (Sampling)
 Elapsed Time: 65.3482 seconds (Warm-up)
               547.671 seconds (Sampling)
               613.019 seconds (Total)

The following numerical problems occured the indicated number of times after warmup on chain 5
                                                                                            count
Exception thrown at line 124: lognormal_log: Scale parameter[3] is inf, but must be finite!     5
Exception thrown at line 114: normal_log: Scale parameter is 0, but must be > 0!                1
When a numerical problem occurs, the Hamiltonian proposal gets rejected.
If the number in the 'count' column is small, do not ask about this message on stan-users.
Warning messages:
1: There were 1 divergent transitions after warmup. Increasing adapt_delta above 0.99 may help. 
2: Examine the pairs() plot to diagnose sampling problems
 
Warning messages:
1: There were 1 divergent transitions after warmup. Increasing adapt_delta above 0.99 may help.
2: Examine the pairs() plot to diagnose sampling problems

Inference for Stan model: mctd_foursurf.
5 chains, each with iter=5000; warmup=1000; thin=1; 
post-warmup draws per chain=4000, total post-warmup draws=20000.

                        mean se_mean    sd     2.5%      25%      50%      75%
loc_detect             -7.13    0.00  0.29    -7.79    -7.30    -7.10    -6.93
scale_detect            1.61    0.00  0.31     1.12     1.40     1.57     1.78
loc_surface[1]         24.60    0.04  5.14    14.14    21.30    24.74    28.07
loc_surface[2]         16.44    0.12 10.43    -3.89     9.12    16.68    23.72
loc_surface[3]          9.28    0.05  4.55    -0.12     6.71     9.15    11.83
scale_surface[1]        6.69    0.01  1.45     4.34     5.68     6.51     7.50
scale_surface[2]       10.38    0.03  3.29     3.13     8.44    10.36    12.39
scale_surface[3]        5.45    0.02  2.74     1.68     3.46     4.88     6.90
intercept[1]           -4.78    0.00  0.20    -5.17    -4.92    -4.79    -4.65
intercept[2]           -5.90    0.00  0.21    -6.30    -6.04    -5.90    -5.76
intercept[3]           -5.59    0.00  0.19    -5.96    -5.72    -5.59    -5.47
b_depth[1]             -0.53    0.00  0.29    -1.12    -0.72    -0.52    -0.32
b_depth[2]             -0.21    0.00  0.29    -0.84    -0.38    -0.18     0.00
b_depth[3]             -0.46    0.00  0.16    -0.79    -0.56    -0.46    -0.36
sig_tube                0.78    0.00  0.09     0.61     0.71     0.77     0.84
sigma[1]                1.76    0.00  0.07     1.63     1.71     1.76     1.81
sigma[2]                1.80    0.00  0.08     1.64     1.74     1.80     1.85
sigma[3]                1.55    0.00  0.06     1.43     1.50     1.54     1.59
crop_tot[1]             1.63    0.01  0.87     0.83     1.16     1.43     1.83
crop_tot[2]             0.42    0.00  0.19     0.24     0.32     0.38     0.46
crop_tot[3]             0.62    0.00  0.15     0.40     0.52     0.60     0.70
crop_tot_diff[1]       -1.21    0.01  0.89    -3.29    -1.43    -1.02    -0.74
crop_tot_diff[2]       -1.01    0.01  0.89    -3.11    -1.22    -0.81    -0.53
crop_int_diff[1]       -1.11    0.00  0.28    -1.68    -1.30    -1.12    -0.93
crop_int_diff[2]       -0.81    0.00  0.27    -1.35    -0.99    -0.80    -0.62
crop_bdepth_diff[1]     0.32    0.00  0.40    -0.52     0.06     0.33     0.59
crop_bdepth_diff[2]     0.06    0.00  0.33    -0.58    -0.16     0.06     0.28
lp__                -1807.49    0.11  7.76 -1823.49 -1812.58 -1807.14 -1802.04
                       97.5% n_eff Rhat
loc_detect             -6.66  5939    1
scale_detect            2.33  5529    1
loc_surface[1]         34.35 13425    1
loc_surface[2]         36.26  7903    1
loc_surface[3]         18.70 10033    1
scale_surface[1]       10.06 20000    1
scale_surface[2]       16.94 10167    1
scale_surface[3]       12.24 20000    1
intercept[1]           -4.38  5989    1
intercept[2]           -5.48  5944    1
intercept[3]           -5.23  3688    1
b_depth[1]              0.03 12848    1
b_depth[2]              0.28  7921    1
b_depth[3]             -0.17 13613    1
sig_tube                0.98  8688    1
sigma[1]                1.90 20000    1
sigma[2]                1.97 20000    1
sigma[3]                1.67 20000    1
crop_tot[1]             3.72 10998    1
crop_tot[2]             0.83  7389    1
crop_tot[3]             0.97  5621    1
crop_tot_diff[1]       -0.32 10789    1
crop_tot_diff[2]       -0.13 10721    1
crop_int_diff[1]       -0.55  5788    1
crop_int_diff[2]       -0.28  4536    1
crop_bdepth_diff[1]     1.09  9919    1
crop_bdepth_diff[2]     0.72 13243    1
lp__                -1793.36  4943    1

Samples were drawn using NUTS(diag_e) at Sun Jul 31 18:37:36 2016.
For each parameter, n_eff is a crude measure of effective sample size,
and Rhat is the potential scale reduction factor on split chains (at 
convergence, Rhat=1).
Inference for Stan model: mctd_foursurf.
5 chains, each with iter=5000; warmup=1000; thin=1; 
post-warmup draws per chain=4000, total post-warmup draws=20000.

                      mean se_mean   sd  2.5%   25%   50%   75% 97.5% n_eff
y_pred[1]             0.01    0.00 0.05  0.00  0.00  0.00  0.00  0.04 19205
y_pred[15]            0.03    0.00 0.25  0.00  0.00  0.00  0.01  0.20 19931
y_pred[28]            0.01    0.00 0.08  0.00  0.00  0.00  0.01  0.10 20000
mu_pred[1]           -5.05    0.02 1.48 -7.70 -6.07 -5.13 -4.12 -1.91  9102
mu_pred[15]          -4.22    0.01 0.89 -5.96 -4.80 -4.21 -3.63 -2.47 15990
mu_pred[28]          -5.82    0.01 0.83 -7.46 -6.38 -5.81 -5.27 -4.19 15779
mu_obs_pred[1]       -6.83    0.01 1.04 -8.86 -7.52 -6.82 -6.15 -4.82 11979
mu_obs_pred[15]      -5.27    0.01 0.83 -6.89 -5.81 -5.26 -4.72 -3.64 17049
mu_obs_pred[28]      -5.95    0.01 0.82 -7.56 -6.50 -5.94 -5.41 -4.35 17269
detect_odds_pred[1]   0.54    0.00 0.15  0.24  0.44  0.55  0.65  0.81 12384
detect_odds_pred[15]  0.75    0.00 0.10  0.53  0.69  0.76  0.82  0.91 18339
detect_odds_pred[28]  0.67    0.00 0.11  0.42  0.60  0.68  0.75  0.85 16660
pred_tot[1]           0.57    0.01 0.70  0.08  0.22  0.39  0.69  2.15 15302
                     Rhat
y_pred[1]               1
y_pred[15]              1
y_pred[28]              1
mu_pred[1]              1
mu_pred[15]             1
mu_pred[28]             1
mu_obs_pred[1]          1
mu_obs_pred[15]         1
mu_obs_pred[28]         1
detect_odds_pred[1]     1
detect_odds_pred[15]    1
detect_odds_pred[28]    1
pred_tot[1]             1

Samples were drawn using NUTS(diag_e) at Sun Jul 31 18:37:36 2016.
For each parameter, n_eff is a crude measure of effective sample size,
and Rhat is the potential scale reduction factor on split chains (at 
convergence, Rhat=1).
[1] "mean of depth: 62.479797979798"

mean of log(nonzero root volume): -5.412056 

RMSE of mu_obs vs log observed (zeroes excluded):  1.65193 
RMSE/var:  0.4579045 

ci_level: 0.8 (80% intervals)
outer_level: 0.95 (95% intervals)
ci_level: 0.8 (80% intervals)
outer_level: 0.95 (95% intervals)
ci_level: 0.8 (80% intervals)
outer_level: 0.95 (95% intervals)
ci_level: 0.8 (80% intervals)
outer_level: 0.95 (95% intervals)
ci_level: 0.8 (80% intervals)
outer_level: 0.95 (95% intervals)
ci_level: 0.8 (80% intervals)
outer_level: 0.95 (95% intervals)
ci_level: 0.8 (80% intervals)
outer_level: 0.95 (95% intervals)
Warning message:
Removed 1 rows containing missing values (geom_bar). 
Warning message:
Removed 400 rows containing non-finite values (stat_smooth). 
null device 
          1 

real	11m27.048s
user	0m50.592s
sys	0m4.102s
Extracting fits
Loading required package: ggplot2
Loading required package: StanHeaders
rstan (Version 2.11.1, packaged: 2016-07-28 18:19:31 UTC, GitRev: 85f7a56811da)
For execution on a local, multicore CPU with excess RAM we recommend calling
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
