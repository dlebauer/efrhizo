Starting current_2012_s2 on  Sun Jul 31 17:03:28 UTC 2016
Running mctd_foursurf.R for year  2012  session  2
Loading required package: ggplot2
Loading required package: StanHeaders
rstan (Version 2.11.1, packaged: 2016-07-28 18:19:31 UTC, GitRev: 85f7a56811da)
For execution on a local, multicore CPU with excess RAM we recommend calling
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
R version 3.3.1 (2016-06-21)
Platform: x86_64-apple-darwin13.4.0 (64-bit)
Running under: OS X 10.11.6 (El Capitan)

locale:
[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8

attached base packages:
[1] stats     graphics  grDevices utils     datasets  base     

other attached packages:
[1] rstan_2.11.1       StanHeaders_2.11.0 ggplot2_2.1.0     

loaded via a namespace (and not attached):
 [1] colorspace_1.2-6 scales_0.4.0     plyr_1.8.4       inline_0.3.14   
 [5] gtable_0.2.0     gridExtra_2.2.1  Rcpp_0.12.6      grid_3.3.1      
 [9] methods_3.3.1    stats4_3.3.1     munsell_0.4.3   
structure(list(Tube = c(1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L, 
11L, 12L, 13L, 14L, 15L, 16L, 17L, 18L, 19L, 20L, 21L, 22L, 23L, 
24L, 25L, 26L, 28L, 29L, 30L, 31L, 32L, 33L, 34L, 35L, 36L, 37L, 
38L, 39L, 40L, 41L, 42L, 43L, 44L, 45L, 47L, 48L, 49L, 50L, 51L, 
52L, 53L, 54L, 55L, 56L, 57L, 58L, 59L, 60L, 61L, 63L, 64L, 65L, 
66L, 68L, 69L, 70L, 71L, 72L, 73L, 74L, 75L, 76L, 77L, 78L, 79L, 
80L, 81L, 82L, 83L, 84L, 85L, 86L, 87L, 88L, 89L, 90L, 91L, 92L, 
93L, 94L, 95L, 96L), Tube_alias = 1:92), .Names = c("Tube", "Tube_alias"
), row.names = c(NA, -92L), class = "data.frame")
   Tube Tube_alias
1     1          1
2     2          2
3     3          3
4     4          4
5     5          5
6     6          6
7     7          7
8     8          8
9     9          9
10   10         10
11   11         11
12   12         12
13   13         13
14   14         14
15   15         15
16   16         16
17   17         17
18   18         18
19   19         19
20   20         20
21   21         21
22   22         22
23   23         23
24   24         24
25   25         25
26   26         26
27   28         27
28   29         28
29   30         29
30   31         30
31   32         31
32   33         32
33   34         33
34   35         34
35   36         35
36   37         36
37   38         37
38   39         38
39   40         39
40   41         40
41   42         41
42   43         42
43   44         43
44   45         44
45   47         45
46   48         46
47   49         47
48   50         48
49   51         49
50   52         50
51   53         51
52   54         52
53   55         53
54   56         54
55   57         55
56   58         56
57   59         57
58   60         58
59   61         59
60   63         60
61   64         61
62   65         62
63   66         63
64   68         64
65   69         65
66   70         66
67   71         67
68   72         68
69   73         69
70   74         70
71   75         71
72   76         72
73   77         73
74   78         74
75   79         75
76   80         76
77   81         77
78   82         78
79   83         79
80   84         80
81   85         81
82   86         82
83   87         83
84   88         84
85   89         85
86   90         86
87   91         87
88   92         88
89   93         89
90   94         90
91   95         91
92   96         92
[1] "Using data from 2012 , session 2"
[1] "Crop name-to-number key:"
              num          name first_tube last_tube first_tube_alias
Maize-Soybean   1 Maize-Soybean          1        24                1
Switchgrass     2   Switchgrass         49        72               47
Miscanthus      3    Miscanthus         25        48               25
Prairie         4       Prairie         73        96               69
              last_tube_alias n_tubes
Maize-Soybean              24      24
Switchgrass                68      22
Miscanthus                 46      22
Prairie                    92      24
[1] "conditions for predicted data:"
   tube depth       Species
1     1     1   Switchgrass
2     2     1    Miscanthus
3     3     1       Prairie
4     4     1 Maize-Soybean
5     1     8   Switchgrass
6     2     8    Miscanthus
7     3     8       Prairie
8     4     8 Maize-Soybean
9     1    15   Switchgrass
10    2    15    Miscanthus
11    3    15       Prairie
12    4    15 Maize-Soybean
13    1    21   Switchgrass
14    2    21    Miscanthus
15    3    21       Prairie
16    4    21 Maize-Soybean
17    1    28   Switchgrass
18    2    28    Miscanthus
19    3    28       Prairie
20    4    28 Maize-Soybean
21    1    35   Switchgrass
22    2    35    Miscanthus
23    3    35       Prairie
24    4    35 Maize-Soybean
25    1    42   Switchgrass
26    2    42    Miscanthus
27    3    42       Prairie
28    4    42 Maize-Soybean
29    1    49   Switchgrass
30    2    49    Miscanthus
31    3    49       Prairie
32    4    49 Maize-Soybean
33    1    55   Switchgrass
34    2    55    Miscanthus
35    3    55       Prairie
36    4    55 Maize-Soybean
37    1    62   Switchgrass
38    2    62    Miscanthus
39    3    62       Prairie
40    4    62 Maize-Soybean
41    1    69   Switchgrass
42    2    69    Miscanthus
43    3    69       Prairie
44    4    69 Maize-Soybean
45    1    76   Switchgrass
46    2    76    Miscanthus
47    3    76       Prairie
48    4    76 Maize-Soybean
49    1    82   Switchgrass
50    2    82    Miscanthus
51    3    82       Prairie
52    4    82 Maize-Soybean
53    1    89   Switchgrass
54    2    89    Miscanthus
55    3    89       Prairie
56    4    89 Maize-Soybean
57    1    96   Switchgrass
58    2    96    Miscanthus
59    3    96       Prairie
60    4    96 Maize-Soybean
61    1   103   Switchgrass
62    2   103    Miscanthus
63    3   103       Prairie
64    4   103 Maize-Soybean
65    1   110   Switchgrass
66    2   110    Miscanthus
67    3   110       Prairie
68    4   110 Maize-Soybean
69    1   116   Switchgrass
70    2   116    Miscanthus
71    3   116       Prairie
72    4   116 Maize-Soybean
73    1   123   Switchgrass
74    2   123    Miscanthus
75    3   123       Prairie
76    4   123 Maize-Soybean
77    1   130   Switchgrass
78    2   130    Miscanthus
79    3   130       Prairie
80    4   130 Maize-Soybean

TRANSLATING MODEL 'mctd_foursurf' FROM Stan CODE TO C++ CODE NOW.
DIAGNOSTIC(S) FROM PARSER:
Warning (non-fatal): assignment operator <- deprecated in the Stan language; use = instead.
Warning (non-fatal): assignment operator <- deprecated in the Stan language; use = instead.
Warning (non-fatal): assignment operator <- deprecated in the Stan language; use = instead.
Warning (non-fatal): assignment operator <- deprecated in the Stan language; use = instead.
Warning (non-fatal): assignment operator <- deprecated in the Stan language; use = instead.
Warning (non-fatal): assignment operator <- deprecated in the Stan language; use = instead.
Warning (non-fatal): assignment operator <- deprecated in the Stan language; use = instead.
Warning (non-fatal): assignment operator <- deprecated in the Stan language; use = instead.
Warning (non-fatal): assignment operator <- deprecated in the Stan language; use = instead.
Warning (non-fatal): assignment operator <- deprecated in the Stan language; use = instead.
Warning (non-fatal): assignment operator <- deprecated in the Stan language; use = instead.
Warning (non-fatal): assignment operator <- deprecated in the Stan language; use = instead.
Warning (non-fatal): assignment operator <- deprecated in the Stan language; use = instead.
Warning (non-fatal): assignment operator <- deprecated in the Stan language; use = instead.
Warning (non-fatal): assignment operator <- deprecated in the Stan language; use = instead.
Warning (non-fatal): assignment operator <- deprecated in the Stan language; use = instead.
Warning (non-fatal): assignment operator <- deprecated in the Stan language; use = instead.
Warning (non-fatal): assignment operator <- deprecated in the Stan language; use = instead.
Warning (non-fatal): assignment operator <- deprecated in the Stan language; use = instead.
Warning (non-fatal): assignment operator <- deprecated in the Stan language; use = instead.
Warning (non-fatal): assignment operator <- deprecated in the Stan language; use = instead.
Warning (non-fatal): assignment operator <- deprecated in the Stan language; use = instead.
Warning (non-fatal): assignment operator <- deprecated in the Stan language; use = instead.

successful in parsing the Stan model 'mctd_foursurf'.

CHECKING DATA AND PREPROCESSING FOR MODEL 'mctd_foursurf' NOW.

COMPILING MODEL 'mctd_foursurf' NOW.

STARTING SAMPLER FOR MODEL 'mctd_foursurf' NOW.
starting worker pid=27110 on localhost:11718 at 12:03:33.362
starting worker pid=27118 on localhost:11718 at 12:03:33.549
starting worker pid=27126 on localhost:11718 at 12:03:33.738
starting worker pid=27134 on localhost:11718 at 12:03:33.936
starting worker pid=27142 on localhost:11718 at 12:03:34.133

CHECKING DATA AND PREPROCESSING FOR MODEL 'mctd_foursurf' NOW.

COMPILING MODEL 'mctd_foursurf' NOW.

STARTING SAMPLER FOR MODEL 'mctd_foursurf' NOW.

SAMPLING FOR MODEL 'mctd_foursurf' NOW (CHAIN 1).

Chain 1, Iteration:    1 / 5000 [  0%]  (Warmup)
CHECKING DATA AND PREPROCESSING FOR MODEL 'mctd_foursurf' NOW.

COMPILING MODEL 'mctd_foursurf' NOW.

STARTING SAMPLER FOR MODEL 'mctd_foursurf' NOW.

SAMPLING FOR MODEL 'mctd_foursurf' NOW (CHAIN 2).

Chain 2, Iteration:    1 / 5000 [  0%]  (Warmup)
CHECKING DATA AND PREPROCESSING FOR MODEL 'mctd_foursurf' NOW.

COMPILING MODEL 'mctd_foursurf' NOW.

STARTING SAMPLER FOR MODEL 'mctd_foursurf' NOW.

SAMPLING FOR MODEL 'mctd_foursurf' NOW (CHAIN 3).

Chain 3, Iteration:    1 / 5000 [  0%]  (Warmup)
CHECKING DATA AND PREPROCESSING FOR MODEL 'mctd_foursurf' NOW.

COMPILING MODEL 'mctd_foursurf' NOW.

STARTING SAMPLER FOR MODEL 'mctd_foursurf' NOW.

SAMPLING FOR MODEL 'mctd_foursurf' NOW (CHAIN 4).

Chain 4, Iteration:    1 / 5000 [  0%]  (Warmup)
CHECKING DATA AND PREPROCESSING FOR MODEL 'mctd_foursurf' NOW.

COMPILING MODEL 'mctd_foursurf' NOW.

STARTING SAMPLER FOR MODEL 'mctd_foursurf' NOW.

SAMPLING FOR MODEL 'mctd_foursurf' NOW (CHAIN 5).

Chain 5, Iteration:    1 / 5000 [  0%]  (Warmup)
Chain 2, Iteration:  500 / 5000 [ 10%]  (Warmup)
Chain 1, Iteration:  500 / 5000 [ 10%]  (Warmup)
Chain 5, Iteration:  500 / 5000 [ 10%]  (Warmup)
Chain 4, Iteration:  500 / 5000 [ 10%]  (Warmup)
Chain 3, Iteration:  500 / 5000 [ 10%]  (Warmup)
Chain 1, Iteration: 1000 / 5000 [ 20%]  (Warmup)
Chain 1, Iteration: 1001 / 5000 [ 20%]  (Sampling)
Chain 2, Iteration: 1000 / 5000 [ 20%]  (Warmup)
Chain 2, Iteration: 1001 / 5000 [ 20%]  (Sampling)
Chain 5, Iteration: 1000 / 5000 [ 20%]  (Warmup)
Chain 5, Iteration: 1001 / 5000 [ 20%]  (Sampling)
Chain 4, Iteration: 1000 / 5000 [ 20%]  (Warmup)
Chain 4, Iteration: 1001 / 5000 [ 20%]  (Sampling)
Chain 3, Iteration: 1000 / 5000 [ 20%]  (Warmup)
Chain 3, Iteration: 1001 / 5000 [ 20%]  (Sampling)
Chain 1, Iteration: 1500 / 5000 [ 30%]  (Sampling)
Chain 5, Iteration: 1500 / 5000 [ 30%]  (Sampling)
Chain 4, Iteration: 1500 / 5000 [ 30%]  (Sampling)
Chain 3, Iteration: 1500 / 5000 [ 30%]  (Sampling)
Chain 2, Iteration: 1500 / 5000 [ 30%]  (Sampling)
Chain 1, Iteration: 2000 / 5000 [ 40%]  (Sampling)
Chain 5, Iteration: 2000 / 5000 [ 40%]  (Sampling)
Chain 3, Iteration: 2000 / 5000 [ 40%]  (Sampling)
Chain 4, Iteration: 2000 / 5000 [ 40%]  (Sampling)
Chain 1, Iteration: 2500 / 5000 [ 50%]  (Sampling)
Chain 5, Iteration: 2500 / 5000 [ 50%]  (Sampling)
Chain 3, Iteration: 2500 / 5000 [ 50%]  (Sampling)
Chain 4, Iteration: 2500 / 5000 [ 50%]  (Sampling)
Chain 2, Iteration: 2000 / 5000 [ 40%]  (Sampling)
Chain 1, Iteration: 3000 / 5000 [ 60%]  (Sampling)
Chain 5, Iteration: 3000 / 5000 [ 60%]  (Sampling)
Chain 3, Iteration: 3000 / 5000 [ 60%]  (Sampling)
Chain 4, Iteration: 3000 / 5000 [ 60%]  (Sampling)
Chain 1, Iteration: 3500 / 5000 [ 70%]  (Sampling)
Chain 5, Iteration: 3500 / 5000 [ 70%]  (Sampling)
Chain 3, Iteration: 3500 / 5000 [ 70%]  (Sampling)
Chain 4, Iteration: 3500 / 5000 [ 70%]  (Sampling)
Chain 2, Iteration: 2500 / 5000 [ 50%]  (Sampling)
Chain 5, Iteration: 4000 / 5000 [ 80%]  (Sampling)
Chain 1, Iteration: 4000 / 5000 [ 80%]  (Sampling)
Chain 3, Iteration: 4000 / 5000 [ 80%]  (Sampling)
Chain 4, Iteration: 4000 / 5000 [ 80%]  (Sampling)
Chain 5, Iteration: 4500 / 5000 [ 90%]  (Sampling)
Chain 1, Iteration: 4500 / 5000 [ 90%]  (Sampling)
Chain 3, Iteration: 4500 / 5000 [ 90%]  (Sampling)
Chain 4, Iteration: 4500 / 5000 [ 90%]  (Sampling)
Chain 2, Iteration: 3000 / 5000 [ 60%]  (Sampling)
Chain 5, Iteration: 5000 / 5000 [100%]  (Sampling)
 Elapsed Time: 60.9058 seconds (Warm-up)
               205.648 seconds (Sampling)
               266.554 seconds (Total)

The following numerical problems occured the indicated number of times after warmup on chain 5
                                                                                            count
Exception thrown at line 124: lognormal_log: Scale parameter[1] is inf, but must be finite!     4
Exception thrown at line 124: lognormal_log: Scale parameter[3] is inf, but must be finite!     4
Exception thrown at line 114: normal_log: Scale parameter is 0, but must be > 0!                1
When a numerical problem occurs, the Hamiltonian proposal gets rejected.
If the number in the 'count' column is small, do not ask about this message on stan-users.

Chain 1, Iteration: 5000 / 5000 [100%]  (Sampling)
 Elapsed Time: 59.2876 seconds (Warm-up)
               210.175 seconds (Sampling)
               269.462 seconds (Total)

The following numerical problems occured the indicated number of times after warmup on chain 1
                                                                                            count
Exception thrown at line 124: lognormal_log: Scale parameter[3] is inf, but must be finite!     4
Exception thrown at line 124: lognormal_log: Scale parameter[1] is inf, but must be finite!     2
Exception thrown at line 124: lognormal_log: Scale parameter[7] is inf, but must be finite!     1
When a numerical problem occurs, the Hamiltonian proposal gets rejected.
If the number in the 'count' column is small, do not ask about this message on stan-users.

Chain 3, Iteration: 5000 / 5000 [100%]  (Sampling)
 Elapsed Time: 66.1873 seconds (Warm-up)
               204.341 seconds (Sampling)
               270.529 seconds (Total)

The following numerical problems occured the indicated number of times after warmup on chain 3
                                                                                            count
Exception thrown at line 124: lognormal_log: Scale parameter[1] is inf, but must be finite!     5
Exception thrown at line 114: normal_log: Scale parameter is 0, but must be > 0!                1
Exception thrown at line 124: lognormal_log: Scale parameter[3] is inf, but must be finite!     1
When a numerical problem occurs, the Hamiltonian proposal gets rejected.
If the number in the 'count' column is small, do not ask about this message on stan-users.

Chain 4, Iteration: 5000 / 5000 [100%]  (Sampling)
 Elapsed Time: 63.5715 seconds (Warm-up)
               213.873 seconds (Sampling)
               277.445 seconds (Total)

The following numerical problems occured the indicated number of times after warmup on chain 4
                                                                                            count
Exception thrown at line 124: lognormal_log: Scale parameter[1] is inf, but must be finite!     3
Exception thrown at line 124: lognormal_log: Scale parameter[1] is 0, but must be > 0!          2
When a numerical problem occurs, the Hamiltonian proposal gets rejected.
If the number in the 'count' column is small, do not ask about this message on stan-users.

Chain 2, Iteration: 3500 / 5000 [ 70%]  (Sampling)
Chain 2, Iteration: 4000 / 5000 [ 80%]  (Sampling)
Chain 2, Iteration: 4500 / 5000 [ 90%]  (Sampling)
Chain 2, Iteration: 5000 / 5000 [100%]  (Sampling)
 Elapsed Time: 59.7709 seconds (Warm-up)
               354.004 seconds (Sampling)
               413.775 seconds (Total)

The following numerical problems occured the indicated number of times after warmup on chain 2
                                                                                            count
Exception thrown at line 124: lognormal_log: Scale parameter[1] is inf, but must be finite!     5
Exception thrown at line 124: lognormal_log: Scale parameter[7] is inf, but must be finite!     3
Exception thrown at line 114: normal_log: Scale parameter is 0, but must be > 0!                1
When a numerical problem occurs, the Hamiltonian proposal gets rejected.
If the number in the 'count' column is small, do not ask about this message on stan-users.
NULL
Inference for Stan model: mctd_foursurf.
5 chains, each with iter=5000; warmup=1000; thin=1; 
post-warmup draws per chain=4000, total post-warmup draws=20000.

                        mean se_mean    sd     2.5%      25%      50%      75%
loc_detect             -6.11    0.00  0.10    -6.30    -6.18    -6.11    -6.04
scale_detect            0.62    0.00  0.08     0.47     0.56     0.62     0.68
loc_surface[1]         14.66    0.02  2.60     9.91    12.85    14.56    16.35
loc_surface[2]         27.06    0.02  2.65    21.78    25.34    27.09    28.82
loc_surface[3]         16.53    0.09  8.50    -0.35    10.78    16.82    22.57
loc_surface[4]         21.57    0.04  3.98    13.78    18.86    21.53    24.23
scale_surface[1]        3.18    0.01  0.73     1.90     2.67     3.13     3.63
scale_surface[2]        5.34    0.00  0.66     4.20     4.88     5.29     5.75
scale_surface[3]       10.88    0.02  2.69     5.20     9.26    10.87    12.52
scale_surface[4]        6.76    0.01  1.24     4.61     5.88     6.65     7.53
intercept[1]           -6.61    0.00  0.19    -7.00    -6.73    -6.60    -6.48
intercept[2]           -5.02    0.00  0.15    -5.31    -5.12    -5.02    -4.92
intercept[3]           -5.69    0.00  0.15    -5.99    -5.79    -5.69    -5.59
intercept[4]           -5.35    0.00  0.14    -5.62    -5.44    -5.35    -5.26
b_depth[1]             -1.22    0.00  0.21    -1.66    -1.35    -1.21    -1.07
b_depth[2]             -1.27    0.00  0.21    -1.68    -1.41    -1.27    -1.13
b_depth[3]             -0.40    0.00  0.21    -0.84    -0.53    -0.39    -0.25
b_depth[4]             -0.94    0.00  0.18    -1.31    -1.05    -0.93    -0.81
sig_tube                0.51    0.00  0.08     0.37     0.46     0.51     0.56
sigma[1]                2.16    0.00  0.13     1.93     2.07     2.16     2.25
sigma[2]                1.80    0.00  0.08     1.65     1.74     1.79     1.85
sigma[3]                1.81    0.00  0.08     1.66     1.75     1.80     1.86
sigma[4]                1.72    0.00  0.07     1.59     1.67     1.71     1.76
crop_tot[1]             0.71    0.00  0.38     0.34     0.48     0.61     0.81
crop_tot[2]             4.08    0.02  2.58     1.46     2.44     3.40     4.87
crop_tot[3]             0.55    0.00  0.16     0.35     0.45     0.52     0.61
crop_tot[4]             1.43    0.01  0.60     0.75     1.04     1.28     1.64
crop_tot_diff[1]        3.37    0.02  2.59     0.62     1.75     2.71     4.17
crop_tot_diff[2]       -0.16    0.00  0.41    -1.15    -0.30    -0.09     0.07
crop_tot_diff[3]        0.72    0.01  0.68    -0.43     0.36     0.64     1.00
crop_int_diff[1]        1.59    0.00  0.24     1.13     1.42     1.57     1.74
crop_int_diff[2]        0.92    0.00  0.21     0.53     0.77     0.91     1.05
crop_int_diff[3]        1.25    0.00  0.22     0.85     1.10     1.25     1.40
crop_bdepth_diff[1]    -0.05    0.00  0.28    -0.58    -0.25    -0.07     0.13
crop_bdepth_diff[2]     0.82    0.00  0.29     0.27     0.62     0.82     1.01
crop_bdepth_diff[3]     0.28    0.00  0.25    -0.19     0.11     0.27     0.44
lp__                -2175.21    0.27 12.54 -2199.95 -2183.54 -2175.23 -2166.84
                       97.5% n_eff Rhat
loc_detect             -5.92  3556    1
scale_detect            0.79  2533    1
loc_surface[1]         19.99 13252    1
loc_surface[2]         32.18 16492    1
loc_surface[3]         32.17  8630    1
loc_surface[4]         29.39 12126    1
scale_surface[1]        4.75  8402    1
scale_surface[2]        6.79 20000    1
scale_surface[3]       16.21 20000    1
scale_surface[4]        9.46 20000    1
intercept[1]           -6.26  3445    1
intercept[2]           -4.73  5914    1
intercept[3]           -5.40  5925    1
intercept[4]           -5.09  6039    1
b_depth[1]             -0.84  4418    1
b_depth[2]             -0.87 14014    1
b_depth[3]             -0.04  8573    1
b_depth[4]             -0.61 10175    1
sig_tube                0.67  2667    1
sigma[1]                2.44 20000    1
sigma[2]                1.96 20000    1
sigma[3]                1.97 20000    1
sigma[4]                1.85 20000    1
crop_tot[1]             1.68  8147    1
crop_tot[2]            10.78 10908    1
crop_tot[3]             0.95  8360    1
crop_tot[4]             2.97  9282    1
crop_tot_diff[1]       10.08 12296    1
crop_tot_diff[2]        0.39  7889    1
crop_tot_diff[3]        2.30 11814    1
crop_int_diff[1]        2.09  3395    1
crop_int_diff[2]        1.36  4479    1
crop_int_diff[3]        1.71  3898    1
crop_bdepth_diff[1]     0.53  9040    1
crop_bdepth_diff[2]     1.39  6374    1
crop_bdepth_diff[3]     0.79 11090    1
lp__                -2150.40  2151    1

Samples were drawn using NUTS(diag_e) at Sun Jul 31 12:10:39 2016.
For each parameter, n_eff is a crude measure of effective sample size,
and Rhat is the potential scale reduction factor on split chains (at 
convergence, Rhat=1).
Inference for Stan model: mctd_foursurf.
5 chains, each with iter=5000; warmup=1000; thin=1; 
post-warmup draws per chain=4000, total post-warmup draws=20000.

                      mean se_mean   sd  2.5%   25%   50%   75% 97.5% n_eff
y_pred[1]             0.05    0.00 0.28  0.00  0.00  0.01  0.03  0.36 19869
y_pred[15]            0.03    0.00 0.11  0.00  0.00  0.00  0.02  0.19 19880
y_pred[28]            0.02    0.00 0.22  0.00  0.00  0.00  0.00  0.10 20000
mu_pred[1]            0.23    0.01 1.03 -1.77 -0.48  0.23  0.91  2.31 13932
mu_pred[15]          -4.33    0.00 0.58 -5.47 -4.71 -4.33 -3.95 -3.19 16290
mu_pred[28]          -6.13    0.00 0.55 -7.23 -6.48 -6.12 -5.77 -5.08 16627
mu_obs_pred[1]       -4.71    0.01 0.68 -6.05 -5.15 -4.71 -4.26 -3.40 16589
mu_obs_pred[15]      -5.09    0.00 0.55 -6.18 -5.45 -5.09 -4.72 -4.02 17745
mu_obs_pred[28]      -6.13    0.00 0.55 -7.23 -6.48 -6.12 -5.77 -5.08 16646
detect_odds_pred[1]   0.87    0.00 0.12  0.53  0.82  0.91  0.95  0.99 13557
detect_odds_pred[15]  0.81    0.00 0.13  0.47  0.74  0.84  0.90  0.97 17450
detect_odds_pred[28]  0.49    0.00 0.19  0.15  0.35  0.49  0.63  0.84 19320
pred_tot[1]           4.66    0.04 4.38  0.92  2.14  3.44  5.64 15.73 14171
                     Rhat
y_pred[1]               1
y_pred[15]              1
y_pred[28]              1
mu_pred[1]              1
mu_pred[15]             1
mu_pred[28]             1
mu_obs_pred[1]          1
mu_obs_pred[15]         1
mu_obs_pred[28]         1
detect_odds_pred[1]     1
detect_odds_pred[15]    1
detect_odds_pred[28]    1
pred_tot[1]             1

Samples were drawn using NUTS(diag_e) at Sun Jul 31 12:10:39 2016.
For each parameter, n_eff is a crude measure of effective sample size,
and Rhat is the potential scale reduction factor on split chains (at 
convergence, Rhat=1).
[1] "mean of depth: 62.3057986870897"

mean of log(nonzero root volume): -5.428764 

RMSE of mu_obs vs log observed (zeroes excluded):  1.802102 
RMSE/var:  0.481221 

ci_level: 0.8 (80% intervals)
outer_level: 0.95 (95% intervals)
ci_level: 0.8 (80% intervals)
outer_level: 0.95 (95% intervals)
ci_level: 0.8 (80% intervals)
outer_level: 0.95 (95% intervals)
ci_level: 0.8 (80% intervals)
outer_level: 0.95 (95% intervals)
ci_level: 0.8 (80% intervals)
outer_level: 0.95 (95% intervals)
ci_level: 0.8 (80% intervals)
outer_level: 0.95 (95% intervals)
ci_level: 0.8 (80% intervals)
outer_level: 0.95 (95% intervals)
Warning message:
Removed 1 rows containing missing values (geom_bar). 
Warning message:
Removed 717 rows containing non-finite values (stat_smooth). 
null device 
          1 

real	8m4.075s
user	0m53.600s
sys	0m3.883s
Extracting fits
Loading required package: ggplot2
Loading required package: StanHeaders
rstan (Version 2.11.1, packaged: 2016-07-28 18:19:31 UTC, GitRev: 85f7a56811da)
For execution on a local, multicore CPU with excess RAM we recommend calling
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
