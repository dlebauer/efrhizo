Starting current_2010_s3 on  Sun Jul 31 16:30:34 UTC 2016
Running mctd_foursurf.R for year  2010  session  3
Loading required package: ggplot2
Loading required package: StanHeaders
rstan (Version 2.11.1, packaged: 2016-07-28 18:19:31 UTC, GitRev: 85f7a56811da)
For execution on a local, multicore CPU with excess RAM we recommend calling
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
R version 3.3.1 (2016-06-21)
Platform: x86_64-apple-darwin13.4.0 (64-bit)
Running under: OS X 10.11.6 (El Capitan)

locale:
[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8

attached base packages:
[1] stats     graphics  grDevices utils     datasets  base     

other attached packages:
[1] rstan_2.11.1       StanHeaders_2.11.0 ggplot2_2.1.0     

loaded via a namespace (and not attached):
 [1] colorspace_1.2-6 scales_0.4.0     plyr_1.8.4       inline_0.3.14   
 [5] gtable_0.2.0     gridExtra_2.2.1  Rcpp_0.12.6      grid_3.3.1      
 [9] methods_3.3.1    stats4_3.3.1     munsell_0.4.3   
structure(list(Tube = c(2L, 6L, 7L, 8L, 9L, 10L, 11L, 12L, 13L, 
14L, 15L, 16L, 17L, 18L, 19L, 20L, 21L, 22L, 23L, 24L, 25L, 26L, 
27L, 28L, 29L, 30L, 31L, 32L, 33L, 34L, 35L, 36L, 37L, 38L, 39L, 
40L, 41L, 42L, 43L, 44L, 45L, 46L, 47L, 48L, 49L, 51L, 52L, 53L, 
54L, 55L, 57L, 58L, 59L, 60L, 61L, 62L, 63L, 64L, 66L, 69L, 70L, 
71L, 72L, 73L, 74L, 75L, 76L, 77L, 78L, 79L, 80L, 81L, 82L, 83L, 
84L, 85L, 86L, 87L, 88L, 89L, 90L, 91L, 92L, 93L, 94L, 95L, 96L
), Tube_alias = 1:87), .Names = c("Tube", "Tube_alias"), row.names = c(NA, 
-87L), class = "data.frame")
   Tube Tube_alias
1     2          1
2     6          2
3     7          3
4     8          4
5     9          5
6    10          6
7    11          7
8    12          8
9    13          9
10   14         10
11   15         11
12   16         12
13   17         13
14   18         14
15   19         15
16   20         16
17   21         17
18   22         18
19   23         19
20   24         20
21   25         21
22   26         22
23   27         23
24   28         24
25   29         25
26   30         26
27   31         27
28   32         28
29   33         29
30   34         30
31   35         31
32   36         32
33   37         33
34   38         34
35   39         35
36   40         36
37   41         37
38   42         38
39   43         39
40   44         40
41   45         41
42   46         42
43   47         43
44   48         44
45   49         45
46   51         46
47   52         47
48   53         48
49   54         49
50   55         50
51   57         51
52   58         52
53   59         53
54   60         54
55   61         55
56   62         56
57   63         57
58   64         58
59   66         59
60   69         60
61   70         61
62   71         62
63   72         63
64   73         64
65   74         65
66   75         66
67   76         67
68   77         68
69   78         69
70   79         70
71   80         71
72   81         72
73   82         73
74   83         74
75   84         75
76   85         76
77   86         77
78   87         78
79   88         79
80   89         80
81   90         81
82   91         82
83   92         83
84   93         84
85   94         85
86   95         86
87   96         87
[1] "Using data from 2010 , session 3"
[1] "Crop name-to-number key:"
              num          name first_tube last_tube first_tube_alias
Maize-Soybean   1 Maize-Soybean          2        24                1
Switchgrass     2   Switchgrass         49        72               45
Miscanthus      3    Miscanthus         25        48               21
Prairie         4       Prairie         73        96               64
              last_tube_alias n_tubes
Maize-Soybean              20      20
Switchgrass                63      19
Miscanthus                 44      24
Prairie                    87      24
[1] "conditions for predicted data:"
   tube depth       Species
1     1     1   Switchgrass
2     2     1    Miscanthus
3     3     1       Prairie
4     4     1 Maize-Soybean
5     1     8   Switchgrass
6     2     8    Miscanthus
7     3     8       Prairie
8     4     8 Maize-Soybean
9     1    15   Switchgrass
10    2    15    Miscanthus
11    3    15       Prairie
12    4    15 Maize-Soybean
13    1    21   Switchgrass
14    2    21    Miscanthus
15    3    21       Prairie
16    4    21 Maize-Soybean
17    1    28   Switchgrass
18    2    28    Miscanthus
19    3    28       Prairie
20    4    28 Maize-Soybean
21    1    35   Switchgrass
22    2    35    Miscanthus
23    3    35       Prairie
24    4    35 Maize-Soybean
25    1    42   Switchgrass
26    2    42    Miscanthus
27    3    42       Prairie
28    4    42 Maize-Soybean
29    1    49   Switchgrass
30    2    49    Miscanthus
31    3    49       Prairie
32    4    49 Maize-Soybean
33    1    55   Switchgrass
34    2    55    Miscanthus
35    3    55       Prairie
36    4    55 Maize-Soybean
37    1    62   Switchgrass
38    2    62    Miscanthus
39    3    62       Prairie
40    4    62 Maize-Soybean
41    1    69   Switchgrass
42    2    69    Miscanthus
43    3    69       Prairie
44    4    69 Maize-Soybean
45    1    76   Switchgrass
46    2    76    Miscanthus
47    3    76       Prairie
48    4    76 Maize-Soybean
49    1    82   Switchgrass
50    2    82    Miscanthus
51    3    82       Prairie
52    4    82 Maize-Soybean
53    1    89   Switchgrass
54    2    89    Miscanthus
55    3    89       Prairie
56    4    89 Maize-Soybean
57    1    96   Switchgrass
58    2    96    Miscanthus
59    3    96       Prairie
60    4    96 Maize-Soybean
61    1   103   Switchgrass
62    2   103    Miscanthus
63    3   103       Prairie
64    4   103 Maize-Soybean
65    1   110   Switchgrass
66    2   110    Miscanthus
67    3   110       Prairie
68    4   110 Maize-Soybean
69    1   116   Switchgrass
70    2   116    Miscanthus
71    3   116       Prairie
72    4   116 Maize-Soybean
73    1   123   Switchgrass
74    2   123    Miscanthus
75    3   123       Prairie
76    4   123 Maize-Soybean
77    1   130   Switchgrass
78    2   130    Miscanthus
79    3   130       Prairie
80    4   130 Maize-Soybean

TRANSLATING MODEL 'mctd_foursurf' FROM Stan CODE TO C++ CODE NOW.
DIAGNOSTIC(S) FROM PARSER:
Warning (non-fatal): assignment operator <- deprecated in the Stan language; use = instead.
Warning (non-fatal): assignment operator <- deprecated in the Stan language; use = instead.
Warning (non-fatal): assignment operator <- deprecated in the Stan language; use = instead.
Warning (non-fatal): assignment operator <- deprecated in the Stan language; use = instead.
Warning (non-fatal): assignment operator <- deprecated in the Stan language; use = instead.
Warning (non-fatal): assignment operator <- deprecated in the Stan language; use = instead.
Warning (non-fatal): assignment operator <- deprecated in the Stan language; use = instead.
Warning (non-fatal): assignment operator <- deprecated in the Stan language; use = instead.
Warning (non-fatal): assignment operator <- deprecated in the Stan language; use = instead.
Warning (non-fatal): assignment operator <- deprecated in the Stan language; use = instead.
Warning (non-fatal): assignment operator <- deprecated in the Stan language; use = instead.
Warning (non-fatal): assignment operator <- deprecated in the Stan language; use = instead.
Warning (non-fatal): assignment operator <- deprecated in the Stan language; use = instead.
Warning (non-fatal): assignment operator <- deprecated in the Stan language; use = instead.
Warning (non-fatal): assignment operator <- deprecated in the Stan language; use = instead.
Warning (non-fatal): assignment operator <- deprecated in the Stan language; use = instead.
Warning (non-fatal): assignment operator <- deprecated in the Stan language; use = instead.
Warning (non-fatal): assignment operator <- deprecated in the Stan language; use = instead.
Warning (non-fatal): assignment operator <- deprecated in the Stan language; use = instead.
Warning (non-fatal): assignment operator <- deprecated in the Stan language; use = instead.
Warning (non-fatal): assignment operator <- deprecated in the Stan language; use = instead.
Warning (non-fatal): assignment operator <- deprecated in the Stan language; use = instead.
Warning (non-fatal): assignment operator <- deprecated in the Stan language; use = instead.

successful in parsing the Stan model 'mctd_foursurf'.

CHECKING DATA AND PREPROCESSING FOR MODEL 'mctd_foursurf' NOW.

COMPILING MODEL 'mctd_foursurf' NOW.

STARTING SAMPLER FOR MODEL 'mctd_foursurf' NOW.
starting worker pid=26606 on localhost:11138 at 11:30:39.405
starting worker pid=26615 on localhost:11138 at 11:30:39.617
starting worker pid=26623 on localhost:11138 at 11:30:39.842
starting worker pid=26631 on localhost:11138 at 11:30:40.057
starting worker pid=26639 on localhost:11138 at 11:30:40.269

CHECKING DATA AND PREPROCESSING FOR MODEL 'mctd_foursurf' NOW.

COMPILING MODEL 'mctd_foursurf' NOW.

STARTING SAMPLER FOR MODEL 'mctd_foursurf' NOW.

SAMPLING FOR MODEL 'mctd_foursurf' NOW (CHAIN 1).

Chain 1, Iteration:    1 / 5000 [  0%]  (Warmup)
CHECKING DATA AND PREPROCESSING FOR MODEL 'mctd_foursurf' NOW.

COMPILING MODEL 'mctd_foursurf' NOW.

STARTING SAMPLER FOR MODEL 'mctd_foursurf' NOW.

SAMPLING FOR MODEL 'mctd_foursurf' NOW (CHAIN 2).

Chain 2, Iteration:    1 / 5000 [  0%]  (Warmup)
CHECKING DATA AND PREPROCESSING FOR MODEL 'mctd_foursurf' NOW.

COMPILING MODEL 'mctd_foursurf' NOW.

STARTING SAMPLER FOR MODEL 'mctd_foursurf' NOW.

SAMPLING FOR MODEL 'mctd_foursurf' NOW (CHAIN 3).

Chain 3, Iteration:    1 / 5000 [  0%]  (Warmup)
CHECKING DATA AND PREPROCESSING FOR MODEL 'mctd_foursurf' NOW.

COMPILING MODEL 'mctd_foursurf' NOW.

STARTING SAMPLER FOR MODEL 'mctd_foursurf' NOW.

SAMPLING FOR MODEL 'mctd_foursurf' NOW (CHAIN 4).

Chain 4, Iteration:    1 / 5000 [  0%]  (Warmup)
CHECKING DATA AND PREPROCESSING FOR MODEL 'mctd_foursurf' NOW.

COMPILING MODEL 'mctd_foursurf' NOW.

STARTING SAMPLER FOR MODEL 'mctd_foursurf' NOW.

SAMPLING FOR MODEL 'mctd_foursurf' NOW (CHAIN 5).

Chain 5, Iteration:    1 / 5000 [  0%]  (Warmup)
Chain 5, Iteration:  500 / 5000 [ 10%]  (Warmup)
Chain 4, Iteration:  500 / 5000 [ 10%]  (Warmup)
Chain 1, Iteration:  500 / 5000 [ 10%]  (Warmup)
Chain 2, Iteration:  500 / 5000 [ 10%]  (Warmup)
Chain 3, Iteration:  500 / 5000 [ 10%]  (Warmup)
Chain 5, Iteration: 1000 / 5000 [ 20%]  (Warmup)
Chain 5, Iteration: 1001 / 5000 [ 20%]  (Sampling)
Chain 4, Iteration: 1000 / 5000 [ 20%]  (Warmup)
Chain 4, Iteration: 1001 / 5000 [ 20%]  (Sampling)
Chain 1, Iteration: 1000 / 5000 [ 20%]  (Warmup)
Chain 1, Iteration: 1001 / 5000 [ 20%]  (Sampling)
Chain 2, Iteration: 1000 / 5000 [ 20%]  (Warmup)
Chain 2, Iteration: 1001 / 5000 [ 20%]  (Sampling)
Chain 3, Iteration: 1000 / 5000 [ 20%]  (Warmup)
Chain 3, Iteration: 1001 / 5000 [ 20%]  (Sampling)
Chain 4, Iteration: 1500 / 5000 [ 30%]  (Sampling)
Chain 1, Iteration: 1500 / 5000 [ 30%]  (Sampling)
Chain 5, Iteration: 1500 / 5000 [ 30%]  (Sampling)
Chain 3, Iteration: 1500 / 5000 [ 30%]  (Sampling)
Chain 2, Iteration: 1500 / 5000 [ 30%]  (Sampling)
Chain 4, Iteration: 2000 / 5000 [ 40%]  (Sampling)
Chain 1, Iteration: 2000 / 5000 [ 40%]  (Sampling)
Chain 3, Iteration: 2000 / 5000 [ 40%]  (Sampling)
Chain 5, Iteration: 2000 / 5000 [ 40%]  (Sampling)
Chain 4, Iteration: 2500 / 5000 [ 50%]  (Sampling)
Chain 1, Iteration: 2500 / 5000 [ 50%]  (Sampling)
Chain 2, Iteration: 2000 / 5000 [ 40%]  (Sampling)
Chain 3, Iteration: 2500 / 5000 [ 50%]  (Sampling)
Chain 5, Iteration: 2500 / 5000 [ 50%]  (Sampling)
Chain 4, Iteration: 3000 / 5000 [ 60%]  (Sampling)
Chain 1, Iteration: 3000 / 5000 [ 60%]  (Sampling)
Chain 2, Iteration: 2500 / 5000 [ 50%]  (Sampling)
Chain 3, Iteration: 3000 / 5000 [ 60%]  (Sampling)
Chain 4, Iteration: 3500 / 5000 [ 70%]  (Sampling)
Chain 5, Iteration: 3000 / 5000 [ 60%]  (Sampling)
Chain 1, Iteration: 3500 / 5000 [ 70%]  (Sampling)
Chain 3, Iteration: 3500 / 5000 [ 70%]  (Sampling)
Chain 2, Iteration: 3000 / 5000 [ 60%]  (Sampling)
Chain 4, Iteration: 4000 / 5000 [ 80%]  (Sampling)
Chain 1, Iteration: 4000 / 5000 [ 80%]  (Sampling)
Chain 5, Iteration: 3500 / 5000 [ 70%]  (Sampling)
Chain 3, Iteration: 4000 / 5000 [ 80%]  (Sampling)
Chain 4, Iteration: 4500 / 5000 [ 90%]  (Sampling)
Chain 1, Iteration: 4500 / 5000 [ 90%]  (Sampling)
Chain 2, Iteration: 3500 / 5000 [ 70%]  (Sampling)
Chain 3, Iteration: 4500 / 5000 [ 90%]  (Sampling)
Chain 5, Iteration: 4000 / 5000 [ 80%]  (Sampling)
Chain 4, Iteration: 5000 / 5000 [100%]  (Sampling)
 Elapsed Time: 56.3707 seconds (Warm-up)
               181.885 seconds (Sampling)
               238.256 seconds (Total)

The following numerical problems occured the indicated number of times after warmup on chain 4
                                                                                            count
Exception thrown at line 124: lognormal_log: Scale parameter[1] is inf, but must be finite!     5
Exception thrown at line 124: lognormal_log: Scale parameter[6] is inf, but must be finite!     4
Exception thrown at line 114: normal_log: Scale parameter is 0, but must be > 0!                1
When a numerical problem occurs, the Hamiltonian proposal gets rejected.
If the number in the 'count' column is small, do not ask about this message on stan-users.

Chain 1, Iteration: 5000 / 5000 [100%]  (Sampling)
 Elapsed Time: 59.2534 seconds (Warm-up)
               182.272 seconds (Sampling)
               241.525 seconds (Total)

The following numerical problems occured the indicated number of times after warmup on chain 1
                                                                                            count
Exception thrown at line 124: lognormal_log: Scale parameter[2] is inf, but must be finite!     9
Exception thrown at line 114: normal_log: Scale parameter is 0, but must be > 0!                1
When a numerical problem occurs, the Hamiltonian proposal gets rejected.
If the number in the 'count' column is small, do not ask about this message on stan-users.

Chain 3, Iteration: 5000 / 5000 [100%]  (Sampling)
 Elapsed Time: 67.5011 seconds (Warm-up)
               181.1 seconds (Sampling)
               248.601 seconds (Total)

The following numerical problems occured the indicated number of times after warmup on chain 3
                                                                                            count
Exception thrown at line 124: lognormal_log: Scale parameter[1] is inf, but must be finite!     8
When a numerical problem occurs, the Hamiltonian proposal gets rejected.
If the number in the 'count' column is small, do not ask about this message on stan-users.

Chain 2, Iteration: 4000 / 5000 [ 80%]  (Sampling)
Chain 5, Iteration: 4500 / 5000 [ 90%]  (Sampling)
Chain 2, Iteration: 4500 / 5000 [ 90%]  (Sampling)
Chain 5, Iteration: 5000 / 5000 [100%]  (Sampling)
 Elapsed Time: 54.1455 seconds (Warm-up)
               222.495 seconds (Sampling)
               276.64 seconds (Total)

The following numerical problems occured the indicated number of times after warmup on chain 5
                                                                                            count
Exception thrown at line 124: lognormal_log: Scale parameter[2] is inf, but must be finite!     3
Exception thrown at line 124: lognormal_log: Scale parameter[1] is inf, but must be finite!     2
When a numerical problem occurs, the Hamiltonian proposal gets rejected.
If the number in the 'count' column is small, do not ask about this message on stan-users.

Chain 2, Iteration: 5000 / 5000 [100%]  (Sampling)
 Elapsed Time: 66.6827 seconds (Warm-up)
               227.371 seconds (Sampling)
               294.054 seconds (Total)

The following numerical problems occured the indicated number of times after warmup on chain 2
                                                                                            count
Exception thrown at line 124: lognormal_log: Scale parameter[1] is inf, but must be finite!     5
Exception thrown at line 124: lognormal_log: Scale parameter[6] is inf, but must be finite!     2
When a numerical problem occurs, the Hamiltonian proposal gets rejected.
If the number in the 'count' column is small, do not ask about this message on stan-users.
NULL
Inference for Stan model: mctd_foursurf.
5 chains, each with iter=5000; warmup=1000; thin=1; 
post-warmup draws per chain=4000, total post-warmup draws=20000.

                        mean se_mean    sd     2.5%      25%      50%      75%
loc_detect             -6.98    0.00  0.11    -7.20    -7.06    -6.98    -6.91
scale_detect            0.60    0.00  0.09     0.43     0.54     0.60     0.66
loc_surface[1]         27.84    0.07  5.46    15.21    24.63    28.46    31.65
loc_surface[2]         13.77    0.03  2.88     8.31    11.86    13.69    15.67
loc_surface[3]         24.91    0.03  3.05    18.84    22.89    24.91    26.94
loc_surface[4]         12.80    0.02  2.26     8.75    11.21    12.66    14.23
scale_surface[1]        8.59    0.02  1.40     6.29     7.63     8.45     9.39
scale_surface[2]        3.57    0.01  0.86     2.15     2.98     3.49     4.07
scale_surface[3]        5.69    0.01  0.86     4.20     5.09     5.62     6.23
scale_surface[4]        3.34    0.01  0.77     2.08     2.80     3.25     3.79
intercept[1]           -6.67    0.00  0.18    -7.02    -6.79    -6.67    -6.55
intercept[2]           -6.25    0.00  0.17    -6.58    -6.36    -6.26    -6.14
intercept[3]           -6.65    0.00  0.17    -7.00    -6.76    -6.65    -6.54
intercept[4]           -6.63    0.00  0.15    -6.94    -6.73    -6.63    -6.53
b_depth[1]             -0.86    0.00  0.28    -1.43    -1.04    -0.85    -0.67
b_depth[2]             -1.02    0.00  0.19    -1.40    -1.14    -1.01    -0.89
b_depth[3]             -1.53    0.00  0.24    -2.03    -1.69    -1.53    -1.37
b_depth[4]             -0.88    0.00  0.17    -1.23    -0.99    -0.87    -0.76
sig_tube                0.57    0.00  0.10     0.39     0.50     0.56     0.63
sigma[1]                1.90    0.00  0.11     1.70     1.82     1.89     1.97
sigma[2]                2.19    0.00  0.11     2.00     2.12     2.19     2.26
sigma[3]                2.27    0.00  0.11     2.08     2.20     2.27     2.34
sigma[4]                2.14    0.00  0.10     1.96     2.08     2.14     2.21
crop_tot[1]             0.35    0.00  0.26     0.15     0.22     0.28     0.40
crop_tot[2]             0.61    0.00  0.28     0.30     0.43     0.54     0.71
crop_tot[3]             1.45    0.02  1.39     0.39     0.72     1.08     1.70
crop_tot[4]             0.32    0.00  0.10     0.20     0.26     0.30     0.37
crop_tot_diff[1]        0.25    0.00  0.36    -0.41     0.10     0.24     0.40
crop_tot_diff[2]        1.10    0.02  1.38    -0.07     0.40     0.75     1.35
crop_tot_diff[3]       -0.03    0.00  0.27    -0.67    -0.09     0.02     0.10
crop_int_diff[1]        0.41    0.00  0.23    -0.03     0.26     0.41     0.57
crop_int_diff[2]        0.01    0.00  0.22    -0.44    -0.13     0.02     0.16
crop_int_diff[3]        0.04    0.00  0.22    -0.40    -0.11     0.04     0.18
crop_bdepth_diff[1]    -0.16    0.00  0.31    -0.76    -0.36    -0.16     0.05
crop_bdepth_diff[2]    -0.68    0.00  0.33    -1.33    -0.89    -0.67    -0.46
crop_bdepth_diff[3]    -0.02    0.00  0.29    -0.58    -0.21    -0.02     0.17
lp__                -2090.41    0.35 14.03 -2117.79 -2099.74 -2090.48 -2081.16
                       97.5% n_eff Rhat
loc_detect             -6.77  2867    1
scale_detect            0.80  1742    1
loc_surface[1]         36.84  6741    1
loc_surface[2]         19.59  7047    1
loc_surface[3]         30.83 14796    1
loc_surface[4]         17.59  9481    1
scale_surface[1]       11.79  7107    1
scale_surface[2]        5.52 11782    1
scale_surface[3]        7.52  6554    1
scale_surface[4]        5.07  8406    1
intercept[1]           -6.32  6596    1
intercept[2]           -5.91  5875    1
intercept[3]           -6.34  4471    1
intercept[4]           -6.34  4859    1
b_depth[1]             -0.35  5513    1
b_depth[2]             -0.67  5279    1
b_depth[3]             -1.09  4363    1
b_depth[4]             -0.58  3953    1
sig_tube                0.77  1911    1
sigma[1]                2.12 20000    1
sigma[2]                2.41 20000    1
sigma[3]                2.49 20000    1
sigma[4]                2.34 20000    1
crop_tot[1]             1.00  7214    1
crop_tot[2]             1.32  5658    1
crop_tot[3]             4.77  6712    1
crop_tot[4]             0.59  6307    1
crop_tot_diff[1]        0.99 10579    1
crop_tot_diff[2]        4.34  7635    1
crop_tot_diff[3]        0.30  9424    1
crop_int_diff[1]        0.88  5920    1
crop_int_diff[2]        0.45  5291    1
crop_int_diff[3]        0.46  5848    1
crop_bdepth_diff[1]     0.45 11391    1
crop_bdepth_diff[2]    -0.04 13430    1
crop_bdepth_diff[3]     0.56 11551    1
lp__                -2062.39  1601    1

Samples were drawn using NUTS(diag_e) at Sun Jul 31 11:35:42 2016.
For each parameter, n_eff is a crude measure of effective sample size,
and Rhat is the potential scale reduction factor on split chains (at 
convergence, Rhat=1).
Inference for Stan model: mctd_foursurf.
5 chains, each with iter=5000; warmup=1000; thin=1; 
post-warmup draws per chain=4000, total post-warmup draws=20000.

                      mean se_mean   sd  2.5%   25%   50%   75% 97.5% n_eff
y_pred[1]             0.04    0.00 0.33  0.00  0.00  0.00  0.01  0.25 20000
y_pred[15]            0.03    0.00 0.31  0.00  0.00  0.00  0.01  0.18 19859
y_pred[28]            0.01    0.00 0.07  0.00  0.00  0.00  0.00  0.05 19587
mu_pred[1]           -2.15    0.01 0.98 -3.98 -2.83 -2.19 -1.50 -0.14  6578
mu_pred[15]          -5.76    0.00 0.61 -6.94 -6.16 -5.77 -5.36 -4.52 16011
mu_pred[28]          -6.41    0.00 0.61 -7.61 -6.80 -6.41 -6.01 -5.20 15970
mu_obs_pred[1]       -5.84    0.01 0.75 -7.31 -6.33 -5.85 -5.35 -4.35 12832
mu_obs_pred[15]      -5.86    0.00 0.61 -7.04 -6.26 -5.88 -5.47 -4.64 16421
mu_obs_pred[28]      -6.60    0.00 0.60 -7.81 -6.99 -6.60 -6.21 -5.42 16715
detect_odds_pred[1]   0.82    0.00 0.16  0.37  0.75  0.87  0.94  0.99 13056
detect_odds_pred[15]  0.83    0.00 0.13  0.48  0.77  0.87  0.93  0.98 19825
detect_odds_pred[28]  0.63    0.00 0.20  0.21  0.49  0.65  0.78  0.93 16774
pred_tot[1]           0.73    0.01 0.65  0.16  0.35  0.55  0.88  2.34 10113
                     Rhat
y_pred[1]               1
y_pred[15]              1
y_pred[28]              1
mu_pred[1]              1
mu_pred[15]             1
mu_pred[28]             1
mu_obs_pred[1]          1
mu_obs_pred[15]         1
mu_obs_pred[28]         1
detect_odds_pred[1]     1
detect_odds_pred[15]    1
detect_odds_pred[28]    1
pred_tot[1]             1

Samples were drawn using NUTS(diag_e) at Sun Jul 31 11:35:42 2016.
For each parameter, n_eff is a crude measure of effective sample size,
and Rhat is the potential scale reduction factor on split chains (at 
convergence, Rhat=1).
[1] "mean of depth: 56.7006172839506"

mean of log(nonzero root volume): -6.405741 

RMSE of mu_obs vs log observed (zeroes excluded):  2.119134 
RMSE/var:  0.4204222 

ci_level: 0.8 (80% intervals)
outer_level: 0.95 (95% intervals)
ci_level: 0.8 (80% intervals)
outer_level: 0.95 (95% intervals)
ci_level: 0.8 (80% intervals)
outer_level: 0.95 (95% intervals)
ci_level: 0.8 (80% intervals)
outer_level: 0.95 (95% intervals)
ci_level: 0.8 (80% intervals)
outer_level: 0.95 (95% intervals)
ci_level: 0.8 (80% intervals)
outer_level: 0.95 (95% intervals)
ci_level: 0.8 (80% intervals)
outer_level: 0.95 (95% intervals)
Warning message:
Removed 656 rows containing non-finite values (stat_smooth). 
null device 
          1 

real	6m0.687s
user	0m53.539s
sys	0m4.035s
Extracting fits
Loading required package: ggplot2
Loading required package: StanHeaders
rstan (Version 2.11.1, packaged: 2016-07-28 18:19:31 UTC, GitRev: 85f7a56811da)
For execution on a local, multicore CPU with excess RAM we recommend calling
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
