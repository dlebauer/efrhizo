Starting current_2010_s4 on  Sun Jul 31 22:23:48 UTC 2016
Running mctd_foursurf.R for year  2010  session  4
Loading required package: ggplot2
Loading required package: StanHeaders
rstan (Version 2.11.1, packaged: 2016-07-28 18:19:31 UTC, GitRev: 85f7a56811da)
For execution on a local, multicore CPU with excess RAM we recommend calling
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
R version 3.3.1 (2016-06-21)
Platform: x86_64-apple-darwin13.4.0 (64-bit)
Running under: OS X 10.11.6 (El Capitan)

locale:
[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8

attached base packages:
[1] stats     graphics  grDevices utils     datasets  base     

other attached packages:
[1] rstan_2.11.1       StanHeaders_2.11.0 ggplot2_2.1.0     

loaded via a namespace (and not attached):
 [1] colorspace_1.2-6 scales_0.4.0     plyr_1.8.4       inline_0.3.14   
 [5] gtable_0.2.0     gridExtra_2.2.1  Rcpp_0.12.6      grid_3.3.1      
 [9] methods_3.3.1    stats4_3.3.1     munsell_0.4.3   
structure(list(Tube = c(1L, 2L, 4L, 5L, 6L, 7L, 8L, 9L, 10L, 
11L, 12L, 14L, 15L, 16L, 17L, 18L, 19L, 20L, 21L, 22L, 23L, 24L, 
26L, 27L, 29L, 32L, 33L, 34L, 35L, 36L, 37L, 38L, 39L, 40L, 41L, 
42L, 43L, 44L, 45L, 46L, 47L, 48L, 49L, 51L, 52L, 53L, 54L, 55L, 
56L, 57L, 58L, 59L, 60L, 61L, 62L, 63L, 64L, 69L, 70L, 71L, 72L, 
73L, 74L, 75L, 76L, 77L, 78L, 79L, 80L, 81L, 82L, 83L, 84L, 85L, 
86L, 87L, 88L, 89L, 91L, 92L, 93L, 94L, 95L, 96L), Tube_alias = 1:84), .Names = c("Tube", 
"Tube_alias"), row.names = c(NA, -84L), class = "data.frame")
   Tube Tube_alias
1     1          1
2     2          2
3     4          3
4     5          4
5     6          5
6     7          6
7     8          7
8     9          8
9    10          9
10   11         10
11   12         11
12   14         12
13   15         13
14   16         14
15   17         15
16   18         16
17   19         17
18   20         18
19   21         19
20   22         20
21   23         21
22   24         22
23   26         23
24   27         24
25   29         25
26   32         26
27   33         27
28   34         28
29   35         29
30   36         30
31   37         31
32   38         32
33   39         33
34   40         34
35   41         35
36   42         36
37   43         37
38   44         38
39   45         39
40   46         40
41   47         41
42   48         42
43   49         43
44   51         44
45   52         45
46   53         46
47   54         47
48   55         48
49   56         49
50   57         50
51   58         51
52   59         52
53   60         53
54   61         54
55   62         55
56   63         56
57   64         57
58   69         58
59   70         59
60   71         60
61   72         61
62   73         62
63   74         63
64   75         64
65   76         65
66   77         66
67   78         67
68   79         68
69   80         69
70   81         70
71   82         71
72   83         72
73   84         73
74   85         74
75   86         75
76   87         76
77   88         77
78   89         78
79   91         79
80   92         80
81   93         81
82   94         82
83   95         83
84   96         84
[1] "Using data from 2010 , session 4"
[1] "Crop name-to-number key:"
              num          name first_tube last_tube first_tube_alias
Maize-Soybean   1 Maize-Soybean          1        24                1
Switchgrass     2   Switchgrass         49        72               43
Miscanthus      3    Miscanthus         26        48               23
Prairie         4       Prairie         73        96               62
              last_tube_alias n_tubes
Maize-Soybean              22      22
Switchgrass                61      19
Miscanthus                 42      20
Prairie                    84      23
[1] "conditions for predicted data:"
   tube depth       Species
1     1     1   Switchgrass
2     2     1    Miscanthus
3     3     1       Prairie
4     4     1 Maize-Soybean
5     1     8   Switchgrass
6     2     8    Miscanthus
7     3     8       Prairie
8     4     8 Maize-Soybean
9     1    15   Switchgrass
10    2    15    Miscanthus
11    3    15       Prairie
12    4    15 Maize-Soybean
13    1    21   Switchgrass
14    2    21    Miscanthus
15    3    21       Prairie
16    4    21 Maize-Soybean
17    1    28   Switchgrass
18    2    28    Miscanthus
19    3    28       Prairie
20    4    28 Maize-Soybean
21    1    35   Switchgrass
22    2    35    Miscanthus
23    3    35       Prairie
24    4    35 Maize-Soybean
25    1    42   Switchgrass
26    2    42    Miscanthus
27    3    42       Prairie
28    4    42 Maize-Soybean
29    1    49   Switchgrass
30    2    49    Miscanthus
31    3    49       Prairie
32    4    49 Maize-Soybean
33    1    55   Switchgrass
34    2    55    Miscanthus
35    3    55       Prairie
36    4    55 Maize-Soybean
37    1    62   Switchgrass
38    2    62    Miscanthus
39    3    62       Prairie
40    4    62 Maize-Soybean
41    1    69   Switchgrass
42    2    69    Miscanthus
43    3    69       Prairie
44    4    69 Maize-Soybean
45    1    76   Switchgrass
46    2    76    Miscanthus
47    3    76       Prairie
48    4    76 Maize-Soybean
49    1    82   Switchgrass
50    2    82    Miscanthus
51    3    82       Prairie
52    4    82 Maize-Soybean
53    1    89   Switchgrass
54    2    89    Miscanthus
55    3    89       Prairie
56    4    89 Maize-Soybean
57    1    96   Switchgrass
58    2    96    Miscanthus
59    3    96       Prairie
60    4    96 Maize-Soybean
61    1   103   Switchgrass
62    2   103    Miscanthus
63    3   103       Prairie
64    4   103 Maize-Soybean
65    1   110   Switchgrass
66    2   110    Miscanthus
67    3   110       Prairie
68    4   110 Maize-Soybean
69    1   116   Switchgrass
70    2   116    Miscanthus
71    3   116       Prairie
72    4   116 Maize-Soybean
73    1   123   Switchgrass
74    2   123    Miscanthus
75    3   123       Prairie
76    4   123 Maize-Soybean
77    1   130   Switchgrass
78    2   130    Miscanthus
79    3   130       Prairie
80    4   130 Maize-Soybean

TRANSLATING MODEL 'mctd_foursurf' FROM Stan CODE TO C++ CODE NOW.
successful in parsing the Stan model 'mctd_foursurf'.

CHECKING DATA AND PREPROCESSING FOR MODEL 'mctd_foursurf' NOW.

COMPILING MODEL 'mctd_foursurf' NOW.

STARTING SAMPLER FOR MODEL 'mctd_foursurf' NOW.
starting worker pid=29398 on localhost:11786 at 17:23:53.730
starting worker pid=29406 on localhost:11786 at 17:23:53.918
starting worker pid=29414 on localhost:11786 at 17:23:54.117
starting worker pid=29422 on localhost:11786 at 17:23:54.303
starting worker pid=29430 on localhost:11786 at 17:23:54.495

CHECKING DATA AND PREPROCESSING FOR MODEL 'mctd_foursurf' NOW.

COMPILING MODEL 'mctd_foursurf' NOW.

STARTING SAMPLER FOR MODEL 'mctd_foursurf' NOW.

SAMPLING FOR MODEL 'mctd_foursurf' NOW (CHAIN 1).

Chain 1, Iteration:    1 / 5000 [  0%]  (Warmup)
CHECKING DATA AND PREPROCESSING FOR MODEL 'mctd_foursurf' NOW.

COMPILING MODEL 'mctd_foursurf' NOW.

STARTING SAMPLER FOR MODEL 'mctd_foursurf' NOW.

SAMPLING FOR MODEL 'mctd_foursurf' NOW (CHAIN 2).

Chain 2, Iteration:    1 / 5000 [  0%]  (Warmup)
CHECKING DATA AND PREPROCESSING FOR MODEL 'mctd_foursurf' NOW.

COMPILING MODEL 'mctd_foursurf' NOW.

STARTING SAMPLER FOR MODEL 'mctd_foursurf' NOW.

SAMPLING FOR MODEL 'mctd_foursurf' NOW (CHAIN 3).

Chain 3, Iteration:    1 / 5000 [  0%]  (Warmup)
CHECKING DATA AND PREPROCESSING FOR MODEL 'mctd_foursurf' NOW.

COMPILING MODEL 'mctd_foursurf' NOW.

STARTING SAMPLER FOR MODEL 'mctd_foursurf' NOW.

SAMPLING FOR MODEL 'mctd_foursurf' NOW (CHAIN 4).

Chain 4, Iteration:    1 / 5000 [  0%]  (Warmup)
CHECKING DATA AND PREPROCESSING FOR MODEL 'mctd_foursurf' NOW.

COMPILING MODEL 'mctd_foursurf' NOW.

STARTING SAMPLER FOR MODEL 'mctd_foursurf' NOW.

SAMPLING FOR MODEL 'mctd_foursurf' NOW (CHAIN 5).

Chain 5, Iteration:    1 / 5000 [  0%]  (Warmup)
Chain 2, Iteration:  500 / 5000 [ 10%]  (Warmup)
Chain 1, Iteration:  500 / 5000 [ 10%]  (Warmup)
Chain 4, Iteration:  500 / 5000 [ 10%]  (Warmup)
Chain 3, Iteration:  500 / 5000 [ 10%]  (Warmup)
Chain 5, Iteration:  500 / 5000 [ 10%]  (Warmup)
Chain 2, Iteration: 1000 / 5000 [ 20%]  (Warmup)
Chain 2, Iteration: 1001 / 5000 [ 20%]  (Sampling)
Chain 1, Iteration: 1000 / 5000 [ 20%]  (Warmup)
Chain 1, Iteration: 1001 / 5000 [ 20%]  (Sampling)
Chain 4, Iteration: 1000 / 5000 [ 20%]  (Warmup)
Chain 4, Iteration: 1001 / 5000 [ 20%]  (Sampling)
Chain 3, Iteration: 1000 / 5000 [ 20%]  (Warmup)
Chain 3, Iteration: 1001 / 5000 [ 20%]  (Sampling)
Chain 5, Iteration: 1000 / 5000 [ 20%]  (Warmup)
Chain 5, Iteration: 1001 / 5000 [ 20%]  (Sampling)
Chain 2, Iteration: 1500 / 5000 [ 30%]  (Sampling)
Chain 1, Iteration: 1500 / 5000 [ 30%]  (Sampling)
Chain 4, Iteration: 1500 / 5000 [ 30%]  (Sampling)
Chain 3, Iteration: 1500 / 5000 [ 30%]  (Sampling)
Chain 5, Iteration: 1500 / 5000 [ 30%]  (Sampling)
Chain 2, Iteration: 2000 / 5000 [ 40%]  (Sampling)
Chain 1, Iteration: 2000 / 5000 [ 40%]  (Sampling)
Chain 4, Iteration: 2000 / 5000 [ 40%]  (Sampling)
Chain 3, Iteration: 2000 / 5000 [ 40%]  (Sampling)
Chain 5, Iteration: 2000 / 5000 [ 40%]  (Sampling)
Chain 2, Iteration: 2500 / 5000 [ 50%]  (Sampling)
Chain 1, Iteration: 2500 / 5000 [ 50%]  (Sampling)
Chain 4, Iteration: 2500 / 5000 [ 50%]  (Sampling)
Chain 3, Iteration: 2500 / 5000 [ 50%]  (Sampling)
Chain 5, Iteration: 2500 / 5000 [ 50%]  (Sampling)
Chain 1, Iteration: 3000 / 5000 [ 60%]  (Sampling)
Chain 2, Iteration: 3000 / 5000 [ 60%]  (Sampling)
Chain 4, Iteration: 3000 / 5000 [ 60%]  (Sampling)
Chain 3, Iteration: 3000 / 5000 [ 60%]  (Sampling)
Chain 5, Iteration: 3000 / 5000 [ 60%]  (Sampling)
Chain 1, Iteration: 3500 / 5000 [ 70%]  (Sampling)
Chain 2, Iteration: 3500 / 5000 [ 70%]  (Sampling)
Chain 4, Iteration: 3500 / 5000 [ 70%]  (Sampling)
Chain 3, Iteration: 3500 / 5000 [ 70%]  (Sampling)
Chain 5, Iteration: 3500 / 5000 [ 70%]  (Sampling)
Chain 1, Iteration: 4000 / 5000 [ 80%]  (Sampling)
Chain 2, Iteration: 4000 / 5000 [ 80%]  (Sampling)
Chain 4, Iteration: 4000 / 5000 [ 80%]  (Sampling)
Chain 3, Iteration: 4000 / 5000 [ 80%]  (Sampling)
Chain 5, Iteration: 4000 / 5000 [ 80%]  (Sampling)
Chain 1, Iteration: 4500 / 5000 [ 90%]  (Sampling)
Chain 2, Iteration: 4500 / 5000 [ 90%]  (Sampling)
Chain 4, Iteration: 4500 / 5000 [ 90%]  (Sampling)
Chain 3, Iteration: 4500 / 5000 [ 90%]  (Sampling)
Chain 5, Iteration: 4500 / 5000 [ 90%]  (Sampling)
Chain 1, Iteration: 5000 / 5000 [100%]  (Sampling)
 Elapsed Time: 54.1623 seconds (Warm-up)
               175.732 seconds (Sampling)
               229.894 seconds (Total)

The following numerical problems occured the indicated number of times after warmup on chain 1
                                                                                            count
Exception thrown at line 124: lognormal_log: Scale parameter[1] is inf, but must be finite!     7
When a numerical problem occurs, the Hamiltonian proposal gets rejected.
If the number in the 'count' column is small, do not ask about this message on stan-users.

Chain 2, Iteration: 5000 / 5000 [100%]  (Sampling)
 Elapsed Time: 52.5938 seconds (Warm-up)
               177.411 seconds (Sampling)
               230.005 seconds (Total)

The following numerical problems occured the indicated number of times after warmup on chain 2
                                                                                             count
Exception thrown at line 124: lognormal_log: Scale parameter[5] is inf, but must be finite!      3
Exception thrown at line 124: lognormal_log: Scale parameter[1] is 0, but must be > 0!           2
Exception thrown at line 124: lognormal_log: Scale parameter[21] is inf, but must be finite!     2
Exception thrown at line 124: lognormal_log: Scale parameter[4] is inf, but must be finite!      2
When a numerical problem occurs, the Hamiltonian proposal gets rejected.
If the number in the 'count' column is small, do not ask about this message on stan-users.

Chain 4, Iteration: 5000 / 5000 [100%]  (Sampling)
 Elapsed Time: 57.5805 seconds (Warm-up)
               174.559 seconds (Sampling)
               232.14 seconds (Total)

The following numerical problems occured the indicated number of times after warmup on chain 4
                                                                                            count
Exception thrown at line 124: lognormal_log: Scale parameter[4] is inf, but must be finite!     4
Exception thrown at line 114: normal_log: Scale parameter is 0, but must be > 0!                1
Exception thrown at line 124: lognormal_log: Scale parameter[1] is inf, but must be finite!     1
Exception thrown at line 124: lognormal_log: Scale parameter[5] is inf, but must be finite!     1
When a numerical problem occurs, the Hamiltonian proposal gets rejected.
If the number in the 'count' column is small, do not ask about this message on stan-users.

Chain 3, Iteration: 5000 / 5000 [100%]  (Sampling)
 Elapsed Time: 58.2703 seconds (Warm-up)
               175.163 seconds (Sampling)
               233.434 seconds (Total)

The following numerical problems occured the indicated number of times after warmup on chain 3
                                                                                            count
Exception thrown at line 124: lognormal_log: Scale parameter[4] is inf, but must be finite!     7
Exception thrown at line 124: lognormal_log: Scale parameter[1] is 0, but must be > 0!          1
When a numerical problem occurs, the Hamiltonian proposal gets rejected.
If the number in the 'count' column is small, do not ask about this message on stan-users.

Chain 5, Iteration: 5000 / 5000 [100%]  (Sampling)
 Elapsed Time: 63.6685 seconds (Warm-up)
               172.824 seconds (Sampling)
               236.492 seconds (Total)

The following numerical problems occured the indicated number of times after warmup on chain 5
                                                                                             count
Exception thrown at line 124: lognormal_log: Scale parameter[21] is inf, but must be finite!     5
Exception thrown at line 124: lognormal_log: Scale parameter[4] is inf, but must be finite!      3
Exception thrown at line 124: lognormal_log: Scale parameter[1] is 0, but must be > 0!           1
When a numerical problem occurs, the Hamiltonian proposal gets rejected.
If the number in the 'count' column is small, do not ask about this message on stan-users.
NULL
Inference for Stan model: mctd_foursurf.
5 chains, each with iter=5000; warmup=1000; thin=1; 
post-warmup draws per chain=4000, total post-warmup draws=20000.

                        mean se_mean    sd     2.5%      25%      50%      75%
loc_detect             -6.17    0.00  0.10    -6.36    -6.23    -6.17    -6.10
scale_detect            0.96    0.00  0.16     0.68     0.84     0.94     1.05
loc_surface[1]         24.70    0.15 12.07    -3.06    17.51    26.51    33.71
loc_surface[2]         15.19    0.02  2.49    10.38    13.54    15.16    16.82
loc_surface[3]         13.77    0.03  4.13     6.57    10.84    13.51    16.37
loc_surface[4]         15.59    0.03  3.91     8.16    12.94    15.56    18.19
scale_surface[1]       12.23    0.04  2.94     6.05    10.49    12.11    13.92
scale_surface[2]        3.30    0.00  0.67     2.20     2.84     3.23     3.68
scale_surface[3]        4.74    0.01  1.67     2.16     3.58     4.51     5.66
scale_surface[4]        4.49    0.01  1.24     2.21     3.68     4.40     5.21
intercept[1]           -5.65    0.00  0.22    -6.07    -5.80    -5.66    -5.51
intercept[2]           -5.44    0.00  0.19    -5.81    -5.57    -5.45    -5.32
intercept[3]           -6.03    0.00  0.19    -6.40    -6.15    -6.03    -5.91
intercept[4]           -5.91    0.00  0.18    -6.26    -6.03    -5.91    -5.79
b_depth[1]             -0.07    0.00  0.33    -0.74    -0.29    -0.05     0.17
b_depth[2]             -0.90    0.00  0.18    -1.27    -1.02    -0.90    -0.78
b_depth[3]             -0.69    0.00  0.20    -1.11    -0.81    -0.68    -0.55
b_depth[4]             -0.82    0.00  0.20    -1.24    -0.95    -0.81    -0.68
sig_tube                0.70    0.00  0.09     0.52     0.63     0.69     0.76
sigma[1]                1.52    0.00  0.09     1.35     1.46     1.52     1.58
sigma[2]                1.76    0.00  0.09     1.60     1.70     1.76     1.82
sigma[3]                1.62    0.00  0.09     1.45     1.56     1.61     1.67
sigma[4]                1.81    0.00  0.09     1.65     1.75     1.81     1.87
crop_tot[1]             0.51    0.00  0.21     0.30     0.39     0.47     0.57
crop_tot[2]             1.17    0.00  0.45     0.61     0.87     1.07     1.35
crop_tot[3]             0.49    0.00  0.19     0.28     0.38     0.45     0.55
crop_tot[4]             0.66    0.00  0.27     0.36     0.49     0.60     0.76
crop_tot_diff[1]        0.66    0.00  0.50    -0.06     0.36     0.58     0.87
crop_tot_diff[2]       -0.02    0.00  0.28    -0.54    -0.13    -0.01     0.11
crop_tot_diff[3]        0.16    0.00  0.34    -0.41    -0.01     0.13     0.30
crop_int_diff[1]        0.21    0.00  0.28    -0.35     0.02     0.21     0.40
crop_int_diff[2]       -0.38    0.00  0.28    -0.96    -0.57    -0.37    -0.19
crop_int_diff[3]       -0.26    0.00  0.28    -0.83    -0.44    -0.25    -0.07
crop_bdepth_diff[1]    -0.83    0.00  0.38    -1.55    -1.09    -0.84    -0.58
crop_bdepth_diff[2]    -0.62    0.00  0.39    -1.35    -0.89    -0.62    -0.36
crop_bdepth_diff[3]    -0.75    0.00  0.39    -1.51    -1.02    -0.76    -0.49
lp__                -1874.53    0.21 11.29 -1897.31 -1882.01 -1874.34 -1866.87
                       97.5% n_eff Rhat
loc_detect             -5.99 20000    1
scale_detect            1.31  3686    1
loc_surface[1]         43.45  6361    1
loc_surface[2]         20.02 18098    1
loc_surface[3]         22.53 15513    1
loc_surface[4]         23.49 13609    1
scale_surface[1]       18.35  5012    1
scale_surface[2]        4.79 20000    1
scale_surface[3]        8.68 20000    1
scale_surface[4]        7.24 20000    1
intercept[1]           -5.21  7256    1
intercept[2]           -5.06  8056    1
intercept[3]           -5.67  7301    1
intercept[4]           -5.55  7654    1
b_depth[1]              0.53  7694    1
b_depth[2]             -0.55 20000    1
b_depth[3]             -0.33 20000    1
b_depth[4]             -0.45 20000    1
sig_tube                0.89  4215    1
sigma[1]                1.71 20000    1
sigma[2]                1.95 20000    1
sigma[3]                1.80 20000    1
sigma[4]                1.99 20000    1
crop_tot[1]             0.98 10403    1
crop_tot[2]             2.32 13237    1
crop_tot[3]             0.91 12677    1
crop_tot[4]             1.34 13270    1
crop_tot_diff[1]        1.83 13246    1
crop_tot_diff[2]        0.46 11449    1
crop_tot_diff[3]        0.87 12232    1
crop_int_diff[1]        0.76  7692    1
crop_int_diff[2]        0.15  7272    1
crop_int_diff[3]        0.28  7268    1
crop_bdepth_diff[1]    -0.08  9140    1
crop_bdepth_diff[2]     0.16  8738    1
crop_bdepth_diff[3]     0.02  8575    1
lp__                -1852.82  2823    1

Samples were drawn using NUTS(diag_e) at Sun Jul 31 17:28:00 2016.
For each parameter, n_eff is a crude measure of effective sample size,
and Rhat is the potential scale reduction factor on split chains (at 
convergence, Rhat=1).
Inference for Stan model: mctd_foursurf.
5 chains, each with iter=5000; warmup=1000; thin=1; 
post-warmup draws per chain=4000, total post-warmup draws=20000.

                      mean se_mean   sd  2.5%   25%   50%   75% 97.5% n_eff
y_pred[1]             0.01    0.00 0.07  0.00  0.00  0.00  0.00  0.07 20000
y_pred[15]            0.02    0.00 0.16  0.00  0.00  0.00  0.01  0.17 20000
y_pred[28]            0.01    0.00 0.03  0.00  0.00  0.00  0.00  0.06 19995
mu_pred[1]           -1.77    0.01 1.06 -3.86 -2.48 -1.79 -1.08  0.36 20000
mu_pred[15]          -5.06    0.01 0.76 -6.55 -5.56 -5.05 -4.55 -3.58 18617
mu_pred[28]          -5.63    0.01 0.76 -7.10 -6.14 -5.64 -5.14 -4.11 17034
mu_obs_pred[1]       -6.17    0.01 0.86 -7.90 -6.74 -6.16 -5.61 -4.50 17183
mu_obs_pred[15]      -5.37    0.01 0.74 -6.83 -5.85 -5.36 -4.88 -3.92 18459
mu_obs_pred[28]      -5.92    0.01 0.73 -7.36 -6.40 -5.93 -5.44 -4.47 18275
detect_odds_pred[1]   0.50    0.00 0.19  0.14  0.35  0.50  0.65  0.86 17479
detect_odds_pred[15]  0.68    0.00 0.15  0.34  0.58  0.70  0.80  0.92 17584
detect_odds_pred[28]  0.56    0.00 0.17  0.22  0.44  0.56  0.68  0.86 18345
pred_tot[1]           1.51    0.01 1.57  0.24  0.65  1.09  1.82  5.43 16987
                     Rhat
y_pred[1]               1
y_pred[15]              1
y_pred[28]              1
mu_pred[1]              1
mu_pred[15]             1
mu_pred[28]             1
mu_obs_pred[1]          1
mu_obs_pred[15]         1
mu_obs_pred[28]         1
detect_odds_pred[1]     1
detect_odds_pred[15]    1
detect_odds_pred[28]    1
pred_tot[1]             1

Samples were drawn using NUTS(diag_e) at Sun Jul 31 17:28:00 2016.
For each parameter, n_eff is a crude measure of effective sample size,
and Rhat is the potential scale reduction factor on split chains (at 
convergence, Rhat=1).
[1] "mean of depth: 58.8407079646018"

mean of log(nonzero root volume): -5.659529 

RMSE of mu_obs vs log observed (zeroes excluded):  1.651808 
RMSE/var:  0.4770801 

ci_level: 0.8 (80% intervals)
outer_level: 0.95 (95% intervals)
ci_level: 0.8 (80% intervals)
outer_level: 0.95 (95% intervals)
ci_level: 0.8 (80% intervals)
outer_level: 0.95 (95% intervals)
ci_level: 0.8 (80% intervals)
outer_level: 0.95 (95% intervals)
ci_level: 0.8 (80% intervals)
outer_level: 0.95 (95% intervals)
ci_level: 0.8 (80% intervals)
outer_level: 0.95 (95% intervals)
ci_level: 0.8 (80% intervals)
outer_level: 0.95 (95% intervals)
Warning message:
Removed 1 rows containing missing values (geom_bar). 
Warning message:
Removed 697 rows containing non-finite values (stat_smooth). 
null device 
          1 

real	5m6.487s
user	0m55.334s
sys	0m3.931s
Extracting fits
Loading required package: ggplot2
Loading required package: StanHeaders
rstan (Version 2.11.1, packaged: 2016-07-28 18:19:31 UTC, GitRev: 85f7a56811da)
For execution on a local, multicore CPU with excess RAM we recommend calling
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
