Starting current_2012_s4 on  Mon Jul 18 23:57:05 UTC 2016
Running mctd_foursurf.R for year  2012  session  4
Loading required package: ggplot2
Loading required package: StanHeaders
rstan (Version 2.10.1, packaged: 2016-06-24 13:22:16 UTC, GitRev: 85f7a56811da)
For execution on a local, multicore CPU with excess RAM we recommend calling
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
R version 3.3.1 (2016-06-21)
Platform: x86_64-apple-darwin13.4.0 (64-bit)
Running under: OS X 10.11.5 (El Capitan)

locale:
[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8

attached base packages:
[1] stats     graphics  grDevices utils     datasets  base     

other attached packages:
[1] rstan_2.10.1         StanHeaders_2.10.0-2 ggplot2_2.1.0       

loaded via a namespace (and not attached):
 [1] colorspace_1.2-6 scales_0.4.0     plyr_1.8.4       inline_0.3.14   
 [5] gtable_0.2.0     gridExtra_2.2.1  Rcpp_0.12.5      grid_3.3.1      
 [9] methods_3.3.1    stats4_3.3.1     munsell_0.4.3   
structure(list(Tube = c(1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L, 
11L, 12L, 13L, 14L, 15L, 16L, 17L, 18L, 19L, 20L, 21L, 22L, 23L, 
24L, 25L, 26L, 27L, 28L, 29L, 30L, 31L, 32L, 33L, 34L, 35L, 36L, 
37L, 38L, 39L, 40L, 41L, 42L, 43L, 44L, 45L, 46L, 47L, 48L, 49L, 
50L, 51L, 52L, 53L, 54L, 55L, 56L, 57L, 58L, 59L, 60L, 61L, 63L, 
64L, 65L, 66L, 67L, 68L, 69L, 70L, 71L, 72L, 73L, 74L, 75L, 76L, 
77L, 78L, 79L, 80L, 81L, 82L, 83L, 84L, 85L, 86L, 87L, 88L, 89L, 
90L, 91L, 92L, 93L, 94L, 95L, 96L), Tube_alias = 1:95), .Names = c("Tube", 
"Tube_alias"), row.names = c(NA, -95L), class = "data.frame")
   Tube Tube_alias
1     1          1
2     2          2
3     3          3
4     4          4
5     5          5
6     6          6
7     7          7
8     8          8
9     9          9
10   10         10
11   11         11
12   12         12
13   13         13
14   14         14
15   15         15
16   16         16
17   17         17
18   18         18
19   19         19
20   20         20
21   21         21
22   22         22
23   23         23
24   24         24
25   25         25
26   26         26
27   27         27
28   28         28
29   29         29
30   30         30
31   31         31
32   32         32
33   33         33
34   34         34
35   35         35
36   36         36
37   37         37
38   38         38
39   39         39
40   40         40
41   41         41
42   42         42
43   43         43
44   44         44
45   45         45
46   46         46
47   47         47
48   48         48
49   49         49
50   50         50
51   51         51
52   52         52
53   53         53
54   54         54
55   55         55
56   56         56
57   57         57
58   58         58
59   59         59
60   60         60
61   61         61
62   63         62
63   64         63
64   65         64
65   66         65
66   67         66
67   68         67
68   69         68
69   70         69
70   71         70
71   72         71
72   73         72
73   74         73
74   75         74
75   76         75
76   77         76
77   78         77
78   79         78
79   80         79
80   81         80
81   82         81
82   83         82
83   84         83
84   85         84
85   86         85
86   87         86
87   88         87
88   89         88
89   90         89
90   91         90
91   92         91
92   93         92
93   94         93
94   95         94
95   96         95
[1] "Using data from 2012 , session 4"
[1] "Crop name-to-number key:"
              num          name first_tube last_tube first_tube_alias
Maize-Soybean   1 Maize-Soybean          1        24                1
Switchgrass     2   Switchgrass         49        72               49
Miscanthus      3    Miscanthus         25        48               25
Prairie         4       Prairie         73        96               72
              last_tube_alias n_tubes
Maize-Soybean              24      24
Switchgrass                71      23
Miscanthus                 48      24
Prairie                    95      24
[1] "conditions for predicted data:"
   tube depth       Species
1     1     1   Switchgrass
2     2     1    Miscanthus
3     3     1       Prairie
4     4     1 Maize-Soybean
5     1     8   Switchgrass
6     2     8    Miscanthus
7     3     8       Prairie
8     4     8 Maize-Soybean
9     1    15   Switchgrass
10    2    15    Miscanthus
11    3    15       Prairie
12    4    15 Maize-Soybean
13    1    21   Switchgrass
14    2    21    Miscanthus
15    3    21       Prairie
16    4    21 Maize-Soybean
17    1    28   Switchgrass
18    2    28    Miscanthus
19    3    28       Prairie
20    4    28 Maize-Soybean
21    1    35   Switchgrass
22    2    35    Miscanthus
23    3    35       Prairie
24    4    35 Maize-Soybean
25    1    42   Switchgrass
26    2    42    Miscanthus
27    3    42       Prairie
28    4    42 Maize-Soybean
29    1    49   Switchgrass
30    2    49    Miscanthus
31    3    49       Prairie
32    4    49 Maize-Soybean
33    1    55   Switchgrass
34    2    55    Miscanthus
35    3    55       Prairie
36    4    55 Maize-Soybean
37    1    62   Switchgrass
38    2    62    Miscanthus
39    3    62       Prairie
40    4    62 Maize-Soybean
41    1    69   Switchgrass
42    2    69    Miscanthus
43    3    69       Prairie
44    4    69 Maize-Soybean
45    1    76   Switchgrass
46    2    76    Miscanthus
47    3    76       Prairie
48    4    76 Maize-Soybean
49    1    82   Switchgrass
50    2    82    Miscanthus
51    3    82       Prairie
52    4    82 Maize-Soybean
53    1    89   Switchgrass
54    2    89    Miscanthus
55    3    89       Prairie
56    4    89 Maize-Soybean
57    1    96   Switchgrass
58    2    96    Miscanthus
59    3    96       Prairie
60    4    96 Maize-Soybean
61    1   103   Switchgrass
62    2   103    Miscanthus
63    3   103       Prairie
64    4   103 Maize-Soybean
65    1   110   Switchgrass
66    2   110    Miscanthus
67    3   110       Prairie
68    4   110 Maize-Soybean
69    1   116   Switchgrass
70    2   116    Miscanthus
71    3   116       Prairie
72    4   116 Maize-Soybean
73    1   123   Switchgrass
74    2   123    Miscanthus
75    3   123       Prairie
76    4   123 Maize-Soybean
77    1   130   Switchgrass
78    2   130    Miscanthus
79    3   130       Prairie
80    4   130 Maize-Soybean

TRANSLATING MODEL 'mctd_foursurf' FROM Stan CODE TO C++ CODE NOW.
DIAGNOSTIC(S) FROM PARSER:
Warning (non-fatal): assignment operator <- deprecated in the Stan language; use = instead.
Warning (non-fatal): assignment operator <- deprecated in the Stan language; use = instead.
Warning (non-fatal): assignment operator <- deprecated in the Stan language; use = instead.
Warning (non-fatal): assignment operator <- deprecated in the Stan language; use = instead.
Warning (non-fatal): assignment operator <- deprecated in the Stan language; use = instead.
Warning (non-fatal): assignment operator <- deprecated in the Stan language; use = instead.
Warning (non-fatal): assignment operator <- deprecated in the Stan language; use = instead.
Warning (non-fatal): assignment operator <- deprecated in the Stan language; use = instead.
Warning (non-fatal): assignment operator <- deprecated in the Stan language; use = instead.
Warning (non-fatal): assignment operator <- deprecated in the Stan language; use = instead.
Warning (non-fatal): assignment operator <- deprecated in the Stan language; use = instead.
Warning (non-fatal): assignment operator <- deprecated in the Stan language; use = instead.
Warning (non-fatal): assignment operator <- deprecated in the Stan language; use = instead.
Warning (non-fatal): assignment operator <- deprecated in the Stan language; use = instead.
Warning (non-fatal): assignment operator <- deprecated in the Stan language; use = instead.
Warning (non-fatal): assignment operator <- deprecated in the Stan language; use = instead.
Warning (non-fatal): assignment operator <- deprecated in the Stan language; use = instead.
Warning (non-fatal): assignment operator <- deprecated in the Stan language; use = instead.
Warning (non-fatal): assignment operator <- deprecated in the Stan language; use = instead.
Warning (non-fatal): assignment operator <- deprecated in the Stan language; use = instead.
Warning (non-fatal): assignment operator <- deprecated in the Stan language; use = instead.
Warning (non-fatal): assignment operator <- deprecated in the Stan language; use = instead.
Warning (non-fatal): assignment operator <- deprecated in the Stan language; use = instead.

successful in parsing the Stan model 'mctd_foursurf'.

CHECKING DATA AND PREPROCESSING FOR MODEL 'mctd_foursurf' NOW.

COMPILING MODEL 'mctd_foursurf' NOW.

STARTING SAMPLER FOR MODEL 'mctd_foursurf' NOW.
starting worker pid=50114 on localhost:11441 at 18:57:10.273
starting worker pid=50145 on localhost:11441 at 18:57:10.439
starting worker pid=50184 on localhost:11441 at 18:57:10.612
starting worker pid=50195 on localhost:11441 at 18:57:10.778
starting worker pid=50204 on localhost:11441 at 18:57:10.955

CHECKING DATA AND PREPROCESSING FOR MODEL 'mctd_foursurf' NOW.

COMPILING MODEL 'mctd_foursurf' NOW.

STARTING SAMPLER FOR MODEL 'mctd_foursurf' NOW.

SAMPLING FOR MODEL 'mctd_foursurf' NOW (CHAIN 1).

Chain 1, Iteration:    1 / 5000 [  0%]  (Warmup) [1] "Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:"                        
 [2] "Exception thrown at line 124: stan::math::lognormal_log: Scale parameter[5] is inf, but must be finite!"                               
 [3] "If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,"
 [4] "but if this warning occurs often then your model may be either severely ill-conditioned or misspecified."                              
 [5] "Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:"                        
 [6] "Exception thrown at line 124: stan::math::lognormal_log: Scale parameter[5] is inf, but must be finite!"                               
 [7] "If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,"
 [8] "but if this warning occurs often then your model may be either severely ill-conditioned or misspecified."                              
 [9] "Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:"                        
[10] "Exception thrown at line 124: stan::math::lognormal_log: Scale parameter[5] is inf, but must be finite!"                               
[11] "If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,"
[12] "but if this warning occurs often then your model may be either severely ill-conditioned or misspecified."                              
[13] "Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:"                        
[14] "Exception thrown at line 124: stan::math::lognormal_log: Scale parameter[5] is inf, but must be finite!"                               
[15] "If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,"
[16] "but if this warning occurs often then your model may be either severely ill-conditioned or misspecified."                              
[17] "Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:"                        
[18] "Exception thrown at line 124: stan::math::lognormal_log: Scale parameter[5] is inf, but must be finite!"                               
[19] "If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,"
[20] "but if this warning occurs often then your model may be either severely ill-conditioned or misspecified."                              
[21] "Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:"                        
[22] "Exception thrown at line 124: stan::math::lognormal_log: Scale parameter[5] is inf, but must be finite!"                               
[23] "If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,"
[24] "but if this warning occurs often then your model may be either severely ill-conditioned or misspecified."                              
[25] "Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:"                        
[26] "Exception thrown at line 124: stan::math::lognormal_log: Scale parameter[1] is 0, but must be > 0!"                                    
[27] "If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,"
[28] "but if this warning occurs often then your model may be either severely ill-conditioned or misspecified."                              
[29] "Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:"                        
[30] "Exception thrown at line 124: stan::math::lognormal_log: Scale parameter[1] is 0, but must be > 0!"                                    
[31] "If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,"
[32] "but if this warning occurs often then your model may be either severely ill-conditioned or misspecified."                              
[33] "Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:"                        
[34] "Exception thrown at line 124: stan::math::lognormal_log: Scale parameter[5] is inf, but must be finite!"                               
[35] "If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,"
[36] "but if this warning occurs often then your model may be either severely ill-conditioned or misspecified."                              
[37] "Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:"                        
[38] "Exception thrown at line 124: stan::math::lognormal_log: Scale parameter[5] is inf, but must be finite!"                               
[39] "If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,"
[40] "but if this warning occurs often then your model may be either severely ill-conditioned or misspecified."                              
[41] "Error : modela70e4d0fa2b9_mctd_foursurf_namespace::write_array: y_pred[k0__] is nan, but must be greater than or equal to 0"           
error occurred during calling the sampler; sampling not done

CHECKING DATA AND PREPROCESSING FOR MODEL 'mctd_foursurf' NOW.

COMPILING MODEL 'mctd_foursurf' NOW.

STARTING SAMPLER FOR MODEL 'mctd_foursurf' NOW.

SAMPLING FOR MODEL 'mctd_foursurf' NOW (CHAIN 2).

Chain 2, Iteration:    1 / 5000 [  0%]  (Warmup)
CHECKING DATA AND PREPROCESSING FOR MODEL 'mctd_foursurf' NOW.

COMPILING MODEL 'mctd_foursurf' NOW.

STARTING SAMPLER FOR MODEL 'mctd_foursurf' NOW.

SAMPLING FOR MODEL 'mctd_foursurf' NOW (CHAIN 3).

Chain 3, Iteration:    1 / 5000 [  0%]  (Warmup)
CHECKING DATA AND PREPROCESSING FOR MODEL 'mctd_foursurf' NOW.

COMPILING MODEL 'mctd_foursurf' NOW.

STARTING SAMPLER FOR MODEL 'mctd_foursurf' NOW.

SAMPLING FOR MODEL 'mctd_foursurf' NOW (CHAIN 4).

Chain 4, Iteration:    1 / 5000 [  0%]  (Warmup)
CHECKING DATA AND PREPROCESSING FOR MODEL 'mctd_foursurf' NOW.

COMPILING MODEL 'mctd_foursurf' NOW.

STARTING SAMPLER FOR MODEL 'mctd_foursurf' NOW.

SAMPLING FOR MODEL 'mctd_foursurf' NOW (CHAIN 5).

Chain 5, Iteration:    1 / 5000 [  0%]  (Warmup)
Chain 5, Iteration:  500 / 5000 [ 10%]  (Warmup)
Chain 3, Iteration:  500 / 5000 [ 10%]  (Warmup)
Chain 4, Iteration:  500 / 5000 [ 10%]  (Warmup)
Chain 2, Iteration:  500 / 5000 [ 10%]  (Warmup)
Chain 5, Iteration: 1000 / 5000 [ 20%]  (Warmup)
Chain 5, Iteration: 1001 / 5000 [ 20%]  (Sampling)
Chain 3, Iteration: 1000 / 5000 [ 20%]  (Warmup)
Chain 3, Iteration: 1001 / 5000 [ 20%]  (Sampling)
Chain 2, Iteration: 1000 / 5000 [ 20%]  (Warmup)
Chain 2, Iteration: 1001 / 5000 [ 20%]  (Sampling)
Chain 4, Iteration: 1000 / 5000 [ 20%]  (Warmup)
Chain 4, Iteration: 1001 / 5000 [ 20%]  (Sampling)
Chain 5, Iteration: 1500 / 5000 [ 30%]  (Sampling)
Chain 3, Iteration: 1500 / 5000 [ 30%]  (Sampling)
Chain 2, Iteration: 1500 / 5000 [ 30%]  (Sampling)
Chain 4, Iteration: 1500 / 5000 [ 30%]  (Sampling)
Chain 5, Iteration: 2000 / 5000 [ 40%]  (Sampling)
Chain 3, Iteration: 2000 / 5000 [ 40%]  (Sampling)
Chain 2, Iteration: 2000 / 5000 [ 40%]  (Sampling)
Chain 4, Iteration: 2000 / 5000 [ 40%]  (Sampling)
Chain 5, Iteration: 2500 / 5000 [ 50%]  (Sampling)
Chain 3, Iteration: 2500 / 5000 [ 50%]  (Sampling)
Chain 2, Iteration: 2500 / 5000 [ 50%]  (Sampling)
Chain 4, Iteration: 2500 / 5000 [ 50%]  (Sampling)
Chain 5, Iteration: 3000 / 5000 [ 60%]  (Sampling)
Chain 3, Iteration: 3000 / 5000 [ 60%]  (Sampling)
Chain 2, Iteration: 3000 / 5000 [ 60%]  (Sampling)
Chain 4, Iteration: 3000 / 5000 [ 60%]  (Sampling)
Chain 5, Iteration: 3500 / 5000 [ 70%]  (Sampling)
Chain 3, Iteration: 3500 / 5000 [ 70%]  (Sampling)
Chain 2, Iteration: 3500 / 5000 [ 70%]  (Sampling)
Chain 4, Iteration: 3500 / 5000 [ 70%]  (Sampling)
Chain 5, Iteration: 4000 / 5000 [ 80%]  (Sampling)
Chain 3, Iteration: 4000 / 5000 [ 80%]  (Sampling)
Chain 2, Iteration: 4000 / 5000 [ 80%]  (Sampling)
Chain 4, Iteration: 4000 / 5000 [ 80%]  (Sampling)
Chain 5, Iteration: 4500 / 5000 [ 90%]  (Sampling)
Chain 3, Iteration: 4500 / 5000 [ 90%]  (Sampling)
Chain 2, Iteration: 4500 / 5000 [ 90%]  (Sampling)
Chain 4, Iteration: 4500 / 5000 [ 90%]  (Sampling)
Chain 3, Iteration: 5000 / 5000 [100%]  (Sampling)
Chain 5, Iteration: 5000 / 5000 [100%]  (Sampling)
 Elapsed Time: 68.573 seconds (Warm-up)
               192.463 seconds (Sampling)
               261.036 seconds (Total)

The following numerical problems occured the indicated number of times after warmup on chain 3
                                                                                             count
Exception thrown at line 124: lognormal_log: Scale parameter[5] is inf, but must be finite!      4
Exception thrown at line 114: normal_log: Scale parameter is 0, but must be > 0!                 1
Exception thrown at line 124: lognormal_log: Scale parameter[1] is inf, but must be finite!      1
Exception thrown at line 124: lognormal_log: Scale parameter[15] is inf, but must be finite!     1
When a numerical problem occurs, the Metropolis proposal gets rejected.
However, by design Metropolis proposals sometimes get rejected even when there are no numerical problems.
Thus, if the number in the 'count' column is small, do not ask about this message on stan-users.

 Elapsed Time: 66.3079 seconds (Warm-up)
               193.619 seconds (Sampling)
               259.927 seconds (Total)

The following numerical problems occured the indicated number of times after warmup on chain 5
                                                                                            count
Exception thrown at line 124: lognormal_log: Scale parameter[6] is inf, but must be finite!     2
Exception thrown at line 114: normal_log: Scale parameter is 0, but must be > 0!                1
When a numerical problem occurs, the Metropolis proposal gets rejected.
However, by design Metropolis proposals sometimes get rejected even when there are no numerical problems.
Thus, if the number in the 'count' column is small, do not ask about this message on stan-users.

Chain 2, Iteration: 5000 / 5000 [100%]  (Sampling)
 Elapsed Time: 70.8678 seconds (Warm-up)
               193.713 seconds (Sampling)
               264.581 seconds (Total)

The following numerical problems occured the indicated number of times after warmup on chain 2
                                                                                            count
Exception thrown at line 124: lognormal_log: Scale parameter[1] is inf, but must be finite!     4
Exception thrown at line 124: lognormal_log: Scale parameter[5] is inf, but must be finite!     1
When a numerical problem occurs, the Metropolis proposal gets rejected.
However, by design Metropolis proposals sometimes get rejected even when there are no numerical problems.
Thus, if the number in the 'count' column is small, do not ask about this message on stan-users.

Chain 4, Iteration: 5000 / 5000 [100%]  (Sampling)
 Elapsed Time: 70.537 seconds (Warm-up)
               193.089 seconds (Sampling)
               263.626 seconds (Total)

The following numerical problems occured the indicated number of times after warmup on chain 4
                                                                                             count
Exception thrown at line 124: lognormal_log: Scale parameter[5] is inf, but must be finite!      5
Exception thrown at line 124: lognormal_log: Scale parameter[15] is inf, but must be finite!     2
Exception thrown at line 114: normal_log: Scale parameter is 0, but must be > 0!                 1
Exception thrown at line 124: lognormal_log: Scale parameter[1] is inf, but must be finite!      1
When a numerical problem occurs, the Metropolis proposal gets rejected.
However, by design Metropolis proposals sometimes get rejected even when there are no numerical problems.
Thus, if the number in the 'count' column is small, do not ask about this message on stan-users.
here are whatever error messages were returned
[[1]]
Stan model 'mctd_foursurf' does not contain samples.

Warning message:
In .local(object, ...) :
  some chains had errors; consider specifying chains = 1 to debug
Warning message:
In .local(object, ...) :
  some chains had errors; consider specifying chains = 1 to debug
Inference for Stan model: mctd_foursurf.
4 chains, each with iter=5000; warmup=1000; thin=1; 
post-warmup draws per chain=4000, total post-warmup draws=16000.

                        mean se_mean   sd     2.5%      25%      50%      75%
loc_detect             -6.68    0.00 0.16    -7.02    -6.78    -6.67    -6.57
scale_detect            1.34    0.00 0.17     1.05     1.22     1.33     1.45
loc_surface[1]         22.74    0.08 7.70     6.78    17.78    23.02    28.08
loc_surface[2]         35.70    0.05 5.45    24.14    32.33    35.96    39.50
loc_surface[3]         22.14    0.09 9.11     3.16    16.15    22.66    28.54
loc_surface[4]         18.91    0.04 4.25    11.16    16.03    18.66    21.60
scale_surface[1]        9.00    0.02 2.31     4.80     7.50     8.84    10.33
scale_surface[2]        7.99    0.01 1.25     5.95     7.13     7.85     8.70
scale_surface[3]       10.06    0.02 2.53     5.44     8.40     9.86    11.55
scale_surface[4]        5.88    0.01 1.59     3.36     4.75     5.68     6.80
intercept[1]           -5.05    0.00 0.17    -5.38    -5.16    -5.05    -4.94
intercept[2]           -4.59    0.00 0.20    -4.96    -4.72    -4.59    -4.46
intercept[3]           -5.80    0.00 0.18    -6.15    -5.93    -5.81    -5.69
intercept[4]           -5.29    0.00 0.15    -5.59    -5.39    -5.29    -5.19
b_depth[1]              0.34    0.00 0.28    -0.25     0.16     0.36     0.55
b_depth[2]             -0.93    0.00 0.33    -1.58    -1.16    -0.93    -0.71
b_depth[3]             -0.19    0.00 0.30    -0.83    -0.37    -0.16     0.03
b_depth[4]             -0.25    0.00 0.20    -0.67    -0.39    -0.25    -0.11
sig_tube                0.61    0.00 0.07     0.49     0.57     0.61     0.66
sigma[1]                1.63    0.00 0.07     1.50     1.58     1.63     1.67
sigma[2]                1.65    0.00 0.07     1.52     1.60     1.65     1.70
sigma[3]                1.70    0.00 0.07     1.57     1.65     1.70     1.75
sigma[4]                1.53    0.00 0.06     1.42     1.49     1.53     1.57
crop_tot[1]             0.83    0.00 0.16     0.58     0.72     0.81     0.91
crop_tot[2]             4.01    0.04 4.45     1.15     1.90     2.79     4.46
crop_tot[3]             0.46    0.00 0.18     0.28     0.36     0.41     0.50
crop_tot[4]             0.74    0.00 0.16     0.51     0.63     0.72     0.82
crop_tot_diff[1]        3.18    0.04 4.45     0.27     1.07     1.98     3.65
crop_tot_diff[2]       -0.37    0.00 0.24    -0.80    -0.50    -0.38    -0.26
crop_tot_diff[3]       -0.09    0.00 0.23    -0.52    -0.22    -0.09     0.05
crop_int_diff[1]        0.46    0.00 0.26    -0.04     0.28     0.46     0.64
crop_int_diff[2]       -0.76    0.00 0.25    -1.24    -0.92    -0.76    -0.59
crop_int_diff[3]       -0.24    0.00 0.23    -0.69    -0.40    -0.24    -0.09
crop_bdepth_diff[1]    -1.28    0.00 0.44    -2.13    -1.57    -1.28    -0.99
crop_bdepth_diff[2]    -0.53    0.00 0.41    -1.36    -0.80    -0.52    -0.25
crop_bdepth_diff[3]    -0.60    0.00 0.35    -1.27    -0.83    -0.61    -0.37
lp__                -2386.82    0.14 9.15 -2405.58 -2392.86 -2386.48 -2380.47
                       97.5% n_eff Rhat
loc_detect             -6.40  7817    1
scale_detect            1.72  6923    1
loc_surface[1]         36.72  9236    1
loc_surface[2]         45.33 11520    1
loc_surface[3]         38.68 10528    1
loc_surface[4]         27.97 11366    1
scale_surface[1]       14.06 16000    1
scale_surface[2]       10.86 16000    1
scale_surface[3]       15.63 16000    1
scale_surface[4]        9.52 16000    1
intercept[1]           -4.71  7382    1
intercept[2]           -4.20  7065    1
intercept[3]           -5.45  7641    1
intercept[4]           -4.98  5888    1
b_depth[1]              0.86  9328    1
b_depth[2]             -0.28 11414    1
b_depth[3]              0.34 10641    1
b_depth[4]              0.13 16000    1
sig_tube                0.76  6888    1
sigma[1]                1.77 16000    1
sigma[2]                1.79 16000    1
sigma[3]                1.86 16000    1
sigma[4]                1.66 16000    1
crop_tot[1]             1.20  7681    1
crop_tot[2]            14.20 11535    1
crop_tot[3]             0.89  9428    1
crop_tot[4]             1.13  7419    1
crop_tot_diff[1]       13.38 11500    1
crop_tot_diff[2]        0.12  8499    1
crop_tot_diff[3]        0.38  7560    1
crop_int_diff[1]        0.96  7022    1
crop_int_diff[2]       -0.27  7250    1
crop_int_diff[3]        0.21  6599    1
crop_bdepth_diff[1]    -0.41  9743    1
crop_bdepth_diff[2]     0.26 10631    1
crop_bdepth_diff[3]     0.10 10481    1
lp__                -2369.73  4329    1

Samples were drawn using NUTS(diag_e) at Mon Jul 18 19:01:43 2016.
For each parameter, n_eff is a crude measure of effective sample size,
and Rhat is the potential scale reduction factor on split chains (at 
convergence, Rhat=1).
 The estimated Bayesian Fraction of Missing Information is a measure of
 the efficiency of the sampler with values close to 1 being ideal.
 For each chain, these estimates are
 0.8 0.8 0.8 0.8Inference for Stan model: mctd_foursurf.
4 chains, each with iter=5000; warmup=1000; thin=1; 
post-warmup draws per chain=4000, total post-warmup draws=16000.

                      mean se_mean   sd  2.5%   25%   50%   75% 97.5% n_eff
y_pred[1]             0.04    0.00 0.40  0.00  0.00  0.00  0.01  0.24 16000
y_pred[15]            0.01    0.00 0.05  0.00  0.00  0.00  0.01  0.09 15982
y_pred[28]            0.02    0.00 0.09  0.00  0.00  0.00  0.01  0.13 16000
mu_pred[1]           -0.73    0.01 1.60 -3.86 -1.80 -0.74  0.34  2.41 11383
mu_pred[15]          -5.01    0.01 0.68 -6.36 -5.46 -5.01 -4.56 -3.65 14124
mu_pred[28]          -5.18    0.01 0.66 -6.48 -5.63 -5.19 -4.75 -3.86 14350
mu_obs_pred[1]       -5.19    0.01 0.96 -7.06 -5.84 -5.19 -4.55 -3.26 12838
mu_obs_pred[15]      -5.56    0.01 0.66 -6.87 -6.00 -5.56 -5.12 -4.27 16000
mu_obs_pred[28]      -5.33    0.01 0.65 -6.60 -5.77 -5.34 -4.90 -4.07 14792
detect_odds_pred[1]   0.73    0.00 0.13  0.43  0.65  0.75  0.83  0.93 12922
detect_odds_pred[15]  0.69    0.00 0.10  0.46  0.62  0.70  0.76  0.86 16000
detect_odds_pred[28]  0.72    0.00 0.09  0.51  0.66  0.73  0.79  0.88 14992
pred_tot[1]           4.87    0.06 7.64  0.61  1.66  2.88  5.40 21.42 13980
                     Rhat
y_pred[1]               1
y_pred[15]              1
y_pred[28]              1
mu_pred[1]              1
mu_pred[15]             1
mu_pred[28]             1
mu_obs_pred[1]          1
mu_obs_pred[15]         1
mu_obs_pred[28]         1
detect_odds_pred[1]     1
detect_odds_pred[15]    1
detect_odds_pred[28]    1
pred_tot[1]             1

Samples were drawn using NUTS(diag_e) at Mon Jul 18 19:01:43 2016.
For each parameter, n_eff is a crude measure of effective sample size,
and Rhat is the potential scale reduction factor on split chains (at 
convergence, Rhat=1).
 The estimated Bayesian Fraction of Missing Information is a measure of
 the efficiency of the sampler with values close to 1 being ideal.
 For each chain, these estimates are
 0.8 0.8 0.8 0.8[1] "mean of depth: 62.6783472803347"

mean of log(nonzero root volume): -5.337845 

RMSE of mu_obs vs log observed (zeroes excluded):  1.585443 
RMSE/var:  0.4788648 

ci_level: 0.8 (80% intervals)
outer_level: 0.95 (95% intervals)
ci_level: 0.8 (80% intervals)
outer_level: 0.95 (95% intervals)
ci_level: 0.8 (80% intervals)
outer_level: 0.95 (95% intervals)
ci_level: 0.8 (80% intervals)
outer_level: 0.95 (95% intervals)
ci_level: 0.8 (80% intervals)
outer_level: 0.95 (95% intervals)
ci_level: 0.8 (80% intervals)
outer_level: 0.95 (95% intervals)
ci_level: 0.8 (80% intervals)
outer_level: 0.95 (95% intervals)
Warning message:
Removed 1 rows containing missing values (geom_bar). 
Warning message:
Removed 599 rows containing non-finite values (stat_smooth). 
null device 
          1 

real	5m32.357s
user	0m54.221s
sys	0m3.939s
Extracting fits
Loading required package: ggplot2
Loading required package: StanHeaders
rstan (Version 2.10.1, packaged: 2016-06-24 13:22:16 UTC, GitRev: 85f7a56811da)
For execution on a local, multicore CPU with excess RAM we recommend calling
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
