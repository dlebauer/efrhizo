## I was in a meeting and wanted to plot up some root data really fast, skipping absolutely all the quality control. 
## This involved throwing out duplicate frames willy-nilly, never checking for completeness of anything, and cutting straight to the means and std errs without any regard for what they do or don't mean.
## here's what I did:

rz = read.csv("/Users/chrisb/UI/energy farm/rhizotron data/20090827/EF20090827-frametots.txt",sep="\t")
rz
names(rz)
rz.noeasydups = rz[!duplicated(rz[,c(1,4:95)],fromLast=TRUE),]
rz.dups = aggregate(rz.noeasydups$Img, by=list(loc=rz.noeasydups$Location, tube=rz.noeasydups$Tube), length)#
			rz.dups = rz.dups[rz.dups$x > 1,]
rz.dups
rz.nodupimg = rz[!duplicated(rz[,'Img'],fromLast=TRUE),]
multiimg = aggregate(rz.nodupimg$Img, by=list(tube=rz.nodupimg$Tube,loc=rz.nodupimg$Location),length)#
	 		multiimg = multiimg[multiimg$x > 1,]
multiimg
			rz$Species = rz$Tube#
			rz$Species[rz$Species %in% 1:24] = "Cornsoy"#
			rz$Species[rz$Species %in% 25:48] = "Miscanthus"#
			rz$Species[rz$Species %in% 49:72] = "Switchgrass"#
			rz$Species[rz$Species %in% 73:96] = "Prairie"#
			rz$Species = factor(rz$Species)#
			#
			rz$Block = rz$Tube#
			rz$Block[rz$Block %in% c(1:8, 25:32, 49:56, 73:80)] = 0#
			rz$Block[rz$Block %in% c(9:12, 33:36, 57:60, 81:84)] = 1#
			rz$Block[rz$Block %in% c(13:16, 37:40, 61:64, 85:88)] = 2#
			rz$Block[rz$Block %in% c(17:20, 41:44, 65:68, 89:92)] = 3#
			rz$Block[rz$Block %in% c(21:24, 45:48, 69:72, 93:96)] = 4#
			rz$Block = factor(rz$Block)
rz$Depth = round((rz$Location*1.35)*cos((pi/180)*30))
rz$ImgArea.mm2 = (754 * rz$PxSizeH) * (510 * rz$PxSizeV)
rz$mmroot.per.cm2 = #
 				rz$TotLength.mm / #
 				rz$ImgArea.mm2 * 100
rz.stats = aggregate(rz$TotLength.mm,by=list(Depth=Depth,Species=Species),mean)
rz.stats = aggregate(rz$TotLength.mm,by=list(Depth=rz$Depth,Species=rz$Species),mean)
library(plotrix)
rz.statsse = aggregate(rz$TotLength.mm,by=list(Depth=Depth,Species=Species),std.error)
rz.statsse = aggregate(rz$TotLength.mm,by=list(Depth=rz$Depth,Species=rz$Species),std.error)
rz.stats$se = rz.statsse$x
names(rz.stats)[3]="mean"
rz.stats.sp = split(rz.stats,rz.stats$Species)
plotCI(rz.stats.sp$Cornsoy$Depth, rz.stats.sp$Cornsoy$mean,rz.stats.sp$Cornsoy$se,add=TRUE)
rz.stats
rz.stats.sp
plotCI(rz.stats.sp$Cornsoy$Depth, rz.stats.sp$Cornsoy$mean,rz.stats.sp$Cornsoy$se)
plotCI(rz.stats.sp$Miscanthus$Depth, rz.stats.sp$Miscanthus$mean,rz.stats.sp$Cornsoy$se)
plotCI(rz.stats.sp$Miscanthus$Depth, rz.stats.sp$Miscanthus$mean,rz.stats.sp$Miscanthus$se)
rz.stats = aggregate(rz$mmroot.per.cm2,by=list(Depth=Depth,Species=Species),mean)
rz.stats = aggregate(rz$mmroot.per.cm2,by=list(Depth=rz$Depth,Species=rz$Species),mean)
rz.statsse = aggregate(rz$mmroot.per.cm2,by=list(Depth=rz$Depth,Species=rz$Species),std.error)
rz.stats.sp = split(rz.stats,rz.stats$Species)
plotCI(rz.stats.sp$Miscanthus$Depth, rz.stats.sp$Miscanthus$mean,rz.stats.sp$Miscanthus$se)
rz.stats
rz.stats.sp
rz.stats$se = rz.statsse$x
names(rz.stats)[3]="mean"
rz.stats.sp = split(rz.stats,rz.stats$Species)
plotCI(rz.stats.sp$Miscanthus$Depth, rz.stats.sp$Miscanthus$mean,rz.stats.sp$Miscanthus$se)
plotCI(rz.stats.sp$Switchgrass$Depth, rz.stats.sp$Switchgrass$mean,rz.stats.sp$Switchgrass$se)
